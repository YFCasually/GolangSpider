{"data":{"solutionArticle":{"title":"\u6ed1\u52a8\u7a97\u53e3","slug":"hua-dong-chuang-kou-by-powcai","reactedType":null,"status":"PUBLISHED","identifier":"hua-dong-chuang-kou-by-powcai","canEdit":false,"reactions":[{"count":1,"reactionType":"AWESOME","__typename":"ArticleReactionCountNode"}],"tags":[{"name":"Python","nameTranslated":"","slug":"python","__typename":"ArticleTagNode"},{"name":"Sliding Window","nameTranslated":"","slug":"sliding-window","__typename":"ArticleTagNode"}],"createdAt":"2019-05-07T07:44:14.231885+00:00","thumbnail":"","author":{"username":"powcai","profile":{"userAvatar":"https://assets.leetcode-cn.com/aliyun-lc-upload/users/powcai/avatar_1541162867.png","userSlug":"powcai","realName":"powcai","__typename":"UserProfileNode"},"__typename":"PublicProfileNode"},"summary":"\u8fd9\u9053\u9898\u4e3b\u8981\u7528\u5230\u601d\u8def\u662f\uff1a\u6ed1\u52a8\u7a97\u53e3\n\u4ec0\u4e48\u662f\u6ed1\u52a8\u7a97\u53e3\uff1f\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u961f\u5217,\u6bd4\u5982\u4f8b\u9898\u4e2d\u7684 abcabcbb\uff0c\u8fdb\u5165\u8fd9\u4e2a\u961f\u5217\uff08\u7a97\u53e3\uff09\u4e3a abc \u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff0c\u5f53\u518d\u8fdb\u5165 a\uff0c\u961f\u5217\u53d8\u6210\u4e86 abca\uff0c\u8fd9\u65f6\u5019\u4e0d\u6ee1\u8db3\u8981\u6c42\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u79fb\u52a8\u8fd9\u4e2a\u961f\u5217\uff01\n\u5982\u4f55\u79fb\u52a8\uff1f\n\u6211\u4eec\u53ea\u8981\u628a\u961f\u5217\u7684\u5de6\u8fb9\u7684\u5143\u7d20\u79fb\u51fa\u5c31\u884c\u4e86\uff0c\u76f4\u5230\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff01\n\u4e00\u76f4\u7ef4\u6301\u8fd9\u6837\u7684\u961f\u5217\uff0c\u627e","topic":{"id":3982,"commentCount":5,"viewCount":3192,"__typename":"TopicNode"},"byLeetcode":false,"isMyFavorite":false,"isMostPopular":false,"isEditorsPick":false,"upvoteCount":22,"upvoted":false,"hitCount":4222,"__typename":"SolutionArticleNode","content":"## \u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u7528\u5230\u601d\u8def\u662f\uff1a\u6ed1\u52a8\u7a97\u53e3\n\n\u4ec0\u4e48\u662f\u6ed1\u52a8\u7a97\u53e3\uff1f\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u961f\u5217,\u6bd4\u5982\u4f8b\u9898\u4e2d\u7684 `abcabcbb`\uff0c\u8fdb\u5165\u8fd9\u4e2a\u961f\u5217\uff08**\u7a97\u53e3**\uff09\u4e3a `abc` \u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff0c\u5f53\u518d\u8fdb\u5165 `a`\uff0c\u961f\u5217\u53d8\u6210\u4e86 `abca`\uff0c\u8fd9\u65f6\u5019\u4e0d\u6ee1\u8db3\u8981\u6c42\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u79fb\u52a8\u8fd9\u4e2a\u961f\u5217\uff01\n\n\u5982\u4f55\u79fb\u52a8\uff1f\n\n\u6211\u4eec\u53ea\u8981\u628a\u961f\u5217\u7684\u5de6\u8fb9\u7684\u5143\u7d20\u79fb\u51fa\u5c31\u884c\u4e86\uff0c\u76f4\u5230\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff01\n\n\u4e00\u76f4\u7ef4\u6301\u8fd9\u6837\u7684\u961f\u5217\uff0c\u627e\u51fa\u961f\u5217\u51fa\u73b0\u6700\u957f\u7684\u957f\u5ea6\u65f6\u5019\uff0c\u6c42\u51fa\u89e3\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n\n----\n\n## \u4ee3\u7801\uff1a\n\n```Python []\nclass Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        if not s:return 0\n        left = 0\n        lookup = set()\n        n = len(s)\n        max_len = 0\n        cur_len = 0\n        for i in range(n):\n            cur_len += 1\n            while s[i] in lookup:\n                lookup.remove(s[left])\n                left += 1\n                cur_len -= 1\n            if cur_len > max_len:max_len = cur_len\n            lookup.add(s[i])\n        return max_len\n```\n```C++ []\nclass Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        if(s.size() == 0) return 0;\n        unordered_set<char> lookup;\n        int maxStr = 0;\n        int left = 0;\n        for(int i = 0; i < s.size(); i++){\n            while (lookup.find(s[i]) != lookup.end()){\n                lookup.erase(s[left]);\n                left ++;\n            }\n            maxStr = max(maxStr,i-left+1);\n            lookup.insert(s[i]);\n    }\n        return maxStr;\n        \n    }\n};\n```\n```Java []\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if (s.length()==0) return 0;\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        int max = 0;\n        int left = 0;\n        for(int i = 0; i < s.length(); i ++){\n            if(map.containsKey(s.charAt(i))){\n                left = Math.max(left,map.get(s.charAt(i)) + 1);\n            }\n            map.put(s.charAt(i),i);\n            max = Math.max(max,i-left+1);\n        }\n        return max;\n        \n    }\n}\n```\n\n"}}}