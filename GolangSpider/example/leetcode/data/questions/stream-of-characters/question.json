{"data":{"question":{"questionId":"1097","questionFrontendId":"1032","boundTopicId":3689,"title":"Stream of Characters","titleSlug":"stream-of-characters","content":"<p>Implement the <code>StreamChecker</code> class as follows:</p>\r\n\r\n<ul>\r\n\t<li><code>StreamChecker(words)</code>: Constructor, init the data structure with the given words.</li>\r\n\t<li><code>query(letter)</code>: returns true if and only if for some <code>k &gt;= 1</code>, the last <code>k</code>&nbsp;characters queried (in order from oldest to newest, including this letter just queried) spell one of the words in the given list.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nStreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // init the dictionary.\r\nstreamChecker.query(&#39;a&#39;);          // return false\r\nstreamChecker.query(&#39;b&#39;);          // return false\r\nstreamChecker.query(&#39;c&#39;);          // return false\r\nstreamChecker.query(&#39;d&#39;);          // return true, because &#39;cd&#39; is in the wordlist\r\nstreamChecker.query(&#39;e&#39;);          // return false\r\nstreamChecker.query(&#39;f&#39;);          // return true, because &#39;f&#39; is in the wordlist\r\nstreamChecker.query(&#39;g&#39;);          // return false\r\nstreamChecker.query(&#39;h&#39;);          // return false\r\nstreamChecker.query(&#39;i&#39;);          // return false\r\nstreamChecker.query(&#39;j&#39;);          // return false\r\nstreamChecker.query(&#39;k&#39;);          // return false\r\nstreamChecker.query(&#39;l&#39;);          // return true, because &#39;kl&#39; is in the wordlist\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\r\n\t<li><code>1 &lt;= words[i].length &lt;= 2000</code></li>\r\n\t<li>Words will only consist of lowercase English letters.</li>\r\n\t<li>Queries will only consist of lowercase English letters.</li>\r\n\t<li>The number of queries is at most&nbsp;40000.</li>\r\n</ul>\r\n","translatedTitle":"\u5b57\u7b26\u6d41","translatedContent":"<p>\u6309\u4e0b\u8ff0\u8981\u6c42\u5b9e\u73b0 <code>StreamChecker</code> \u7c7b\uff1a</p>\n\n<ul>\n\t<li><code>StreamChecker(words)</code>\uff1a\u6784\u9020\u51fd\u6570\uff0c\u7528\u7ed9\u5b9a\u7684\u5b57\u8bcd\u521d\u59cb\u5316\u6570\u636e\u7ed3\u6784\u3002</li>\n\t<li><code>query(letter)</code>\uff1a\u5982\u679c\u5b58\u5728\u67d0\u4e9b <code>k &gt;= 1</code>\uff0c\u53ef\u4ee5\u7528\u67e5\u8be2\u7684\u6700\u540e <code>k</code>\u4e2a\u5b57\u7b26\uff08\u6309\u4ece\u65e7\u5230\u65b0\u987a\u5e8f\uff0c\u5305\u62ec\u521a\u521a\u67e5\u8be2\u7684\u5b57\u6bcd\uff09\u62fc\u5199\u51fa\u7ed9\u5b9a\u5b57\u8bcd\u8868\u4e2d\u7684\u67d0\u4e00\u5b57\u8bcd\u65f6\uff0c\u8fd4\u56de <code>true</code>\u3002\u5426\u5219\uff0c\u8fd4\u56de <code>false</code>\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>StreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // \u521d\u59cb\u5316\u5b57\u5178\nstreamChecker.query(&#39;a&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;b&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;c&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;d&#39;);          // \u8fd4\u56de true\uff0c\u56e0\u4e3a &#39;cd&#39; \u5728\u5b57\u8bcd\u8868\u4e2d\nstreamChecker.query(&#39;e&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;f&#39;);          // \u8fd4\u56de true\uff0c\u56e0\u4e3a &#39;f&#39; \u5728\u5b57\u8bcd\u8868\u4e2d\nstreamChecker.query(&#39;g&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;h&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;i&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;j&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;k&#39;);          // \u8fd4\u56de false\nstreamChecker.query(&#39;l&#39;);          // \u8fd4\u56de true\uff0c\u56e0\u4e3a &#39;kl&#39; \u5728\u5b57\u8bcd\u8868\u4e2d\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 2000</code></li>\n\t<li>\u5b57\u8bcd\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u5f85\u67e5\u9879\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u5f85\u67e5\u9879\u6700\u591a 40000 \u4e2a\u3002</li>\n</ul>\n","isPaidOnly":false,"difficulty":"Hard","likes":8,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Trie","slug":"trie","translatedName":"\u5b57\u5178\u6811","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class StreamChecker {\r\npublic:\r\n    StreamChecker(vector<string>& words) {\r\n        \r\n    }\r\n    \r\n    bool query(char letter) {\r\n        \r\n    }\r\n};\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * StreamChecker* obj = new StreamChecker(words);\r\n * bool param_1 = obj->query(letter);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class StreamChecker {\r\n\r\n    public StreamChecker(String[] words) {\r\n        \r\n    }\r\n    \r\n    public boolean query(char letter) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * StreamChecker obj = new StreamChecker(words);\r\n * boolean param_1 = obj.query(letter);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class StreamChecker(object):\r\n\r\n    def __init__(self, words):\r\n        \"\"\"\r\n        :type words: List[str]\r\n        \"\"\"\r\n        \r\n\r\n    def query(self, letter):\r\n        \"\"\"\r\n        :type letter: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your StreamChecker object will be instantiated and called as such:\r\n# obj = StreamChecker(words)\r\n# param_1 = obj.query(letter)","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class StreamChecker:\r\n\r\n    def __init__(self, words: List[str]):\r\n        \r\n\r\n    def query(self, letter: str) -> bool:\r\n        \r\n\r\n\r\n# Your StreamChecker object will be instantiated and called as such:\r\n# obj = StreamChecker(words)\r\n# param_1 = obj.query(letter)","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\r\n\r\n\r\ntypedef struct {\r\n    \r\n} StreamChecker;\r\n\r\n\r\nStreamChecker* streamCheckerCreate(char ** words, int wordsSize) {\r\n    \r\n}\r\n\r\nbool streamCheckerQuery(StreamChecker* obj, char letter) {\r\n  \r\n}\r\n\r\nvoid streamCheckerFree(StreamChecker* obj) {\r\n    \r\n}\r\n\r\n/**\r\n * Your StreamChecker struct will be instantiated and called as such:\r\n * StreamChecker* obj = streamCheckerCreate(words, wordsSize);\r\n * bool param_1 = streamCheckerQuery(obj, letter);\r\n \r\n * streamCheckerFree(obj);\r\n*/","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class StreamChecker {\r\n\r\n    public StreamChecker(string[] words) {\r\n        \r\n    }\r\n    \r\n    public bool Query(char letter) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * StreamChecker obj = new StreamChecker(words);\r\n * bool param_1 = obj.Query(letter);\r\n */","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\r\n * @param {string[]} words\r\n */\r\nvar StreamChecker = function(words) {\r\n    \r\n};\r\n\r\n/** \r\n * @param {character} letter\r\n * @return {boolean}\r\n */\r\nStreamChecker.prototype.query = function(letter) {\r\n    \r\n};\r\n\r\n/** \r\n * Your StreamChecker object will be instantiated and called as such:\r\n * var obj = new StreamChecker(words)\r\n * var param_1 = obj.query(letter)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"class StreamChecker\r\n\r\n=begin\r\n    :type words: String[]\r\n=end\r\n    def initialize(words)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type letter: Character\r\n    :rtype: Boolean\r\n=end\r\n    def query(letter)\r\n        \r\n    end\r\n\r\n\r\nend\r\n\r\n# Your StreamChecker object will be instantiated and called as such:\r\n# obj = StreamChecker.new(words)\r\n# param_1 = obj.query(letter)","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"\r\nclass StreamChecker {\r\n\r\n    init(_ words: [String]) {\r\n        \r\n    }\r\n    \r\n    func query(_ letter: Character) -> Bool {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * let obj = StreamChecker(words)\r\n * let ret_1: Bool = obj.query(letter)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"type StreamChecker struct {\r\n    \r\n}\r\n\r\n\r\nfunc Constructor(words []string) StreamChecker {\r\n    \r\n}\r\n\r\n\r\nfunc (this *StreamChecker) Query(letter byte) bool {\r\n    \r\n}\r\n\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * obj := Constructor(words);\r\n * param_1 := obj.Query(letter);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"class StreamChecker(_words: Array[String]) {\r\n\r\n    def query(letter: Char): Boolean = {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * var obj = new StreamChecker(words)\r\n * var param_1 = obj.query(letter)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class StreamChecker(words: Array<String>) {\r\n\r\n    fun query(letter: Char): Boolean {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * var obj = StreamChecker(words)\r\n * var param_1 = obj.query(letter)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"struct StreamChecker {\r\n\r\n}\r\n\r\n\r\n/** \r\n * `&self` means the method takes an immutable reference.\r\n * If you need a mutable reference, change it to `&mut self` instead.\r\n */\r\nimpl StreamChecker {\r\n\r\n    fn new(words: Vec<String>) -> Self {\r\n        \r\n    }\r\n    \r\n    fn query(&self, letter: char) -> bool {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * let obj = StreamChecker::new(words);\r\n * let ret_1: bool = obj.query(letter);\r\n */","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class StreamChecker {\r\n    /**\r\n     * @param String[] $words\r\n     */\r\n    function __construct($words) {\r\n        \r\n    }\r\n  \r\n    /**\r\n     * @param String $letter\r\n     * @return Boolean\r\n     */\r\n    function query($letter) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your StreamChecker object will be instantiated and called as such:\r\n * $obj = StreamChecker($words);\r\n * $ret_1 = $obj->query($letter);\r\n */","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"297\", \"totalSubmission\": \"1.4K\", \"totalAcceptedRaw\": 297, \"totalSubmissionRaw\": 1434, \"acRate\": \"20.7%\"}","hints":["Put the words into a trie, and manage a set of pointers within that trie."],"solution":null,"status":null,"sampleTestCase":"[\"StreamChecker\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\",\"query\"]\n[[[\"cd\",\"f\",\"kl\"]],[\"a\"],[\"b\"],[\"c\"],[\"d\"],[\"e\"],[\"f\"],[\"g\"],[\"h\"],[\"i\"],[\"j\"],[\"k\"],[\"l\"]]","metaData":"{\r\n    \"classname\": \"StreamChecker\",\r\n    \"maxbytesperline\": 500000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n            {\r\n                \"type\": \"string[]\",\r\n                \"name\": \"words\"\r\n            }]\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"query\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"character\",\r\n                    \"name\": \"letter\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"boolean\"\r\n            }\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"starts\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"ends\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<boolean>\",\r\n        \"dealloc\": true\r\n    }\r\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}