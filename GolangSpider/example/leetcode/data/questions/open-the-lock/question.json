{"data":{"question":{"questionId":"753","questionFrontendId":"752","boundTopicId":1759,"title":"Open the Lock","titleSlug":"open-the-lock","content":"<p>\r\nYou have a lock in front of you with 4 circular wheels.  Each wheel has 10 slots: <code>'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'</code>.  The wheels can rotate freely and wrap around: for example we can turn <code>'9'</code> to be <code>'0'</code>, or <code>'0'</code> to be <code>'9'</code>.  Each move consists of turning one wheel one slot.\r\n</p><p>\r\nThe lock initially starts at <code>'0000'</code>, a string representing the state of the 4 wheels.\r\n</p><p>\r\nYou are given a list of <code>deadends</code> dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\r\n</p><p>\r\nGiven a <code>target</code> representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"\r\n<b>Output:</b> 6\r\n<b>Explanation:</b>\r\nA sequence of valid moves would be \"0000\" -> \"1000\" -> \"1100\" -> \"1200\" -> \"1201\" -> \"1202\" -> \"0202\".\r\nNote that a sequence like \"0000\" -> \"0001\" -> \"0002\" -> \"0102\" -> \"0202\" would be invalid,\r\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> deadends = [\"8888\"], target = \"0009\"\r\n<b>Output:</b> 1\r\n<b>Explanation:</b>\r\nWe can turn the last wheel in reverse to move from \"0000\" -> \"0009\".\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"\r\n<b>Output:</b> -1\r\n<b>Explanation:</b>\r\nWe can't reach the target without getting stuck.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 4:</b><br />\r\n<pre>\r\n<b>Input:</b> deadends = [\"0000\"], target = \"8888\"\r\n<b>Output:</b> -1\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The length of <code>deadends</code> will be in the range <code>[1, 500]</code>.</li>\r\n<li><code>target</code> will not be in the list <code>deadends</code>.</li>\r\n<li>Every string in <code>deadends</code> and the string <code>target</code> will be a string of 4 digits from the 10,000 possibilities <code>'0000'</code> to <code>'9999'</code>.</li>\r\n</ol>\r\n</p>","translatedTitle":"\u6253\u5f00\u8f6c\u76d8\u9501","translatedContent":"<p>\u4f60\u6709\u4e00\u4e2a\u5e26\u6709\u56db\u4e2a\u5706\u5f62\u62e8\u8f6e\u7684\u8f6c\u76d8\u9501\u3002\u6bcf\u4e2a\u62e8\u8f6e\u90fd\u670910\u4e2a\u6570\u5b57\uff1a <code>&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;</code> \u3002\u6bcf\u4e2a\u62e8\u8f6e\u53ef\u4ee5\u81ea\u7531\u65cb\u8f6c\uff1a\u4f8b\u5982\u628a <code>&#39;9&#39;</code> \u53d8\u4e3a&nbsp; <code>&#39;0&#39;</code><font color=\"#333333\" face=\"Helvetica Neue, Helvetica, Arial, sans-serif\"><span style=\"background-color:#ffffff; font-size:14px\">\uff0c</span></font><code>&#39;0&#39;</code> \u53d8\u4e3a <code>&#39;9&#39;</code> \u3002\u6bcf\u6b21\u65cb\u8f6c\u90fd\u53ea\u80fd\u65cb\u8f6c\u4e00\u4e2a\u62e8\u8f6e\u7684\u4e00\u4f4d\u6570\u5b57\u3002</p>\n\n<p>\u9501\u7684\u521d\u59cb\u6570\u5b57\u4e3a <code>&#39;0000&#39;</code> \uff0c\u4e00\u4e2a\u4ee3\u8868\u56db\u4e2a\u62e8\u8f6e\u7684\u6570\u5b57\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u5217\u8868 <code>deadends</code> \u5305\u542b\u4e86\u4e00\u7ec4\u6b7b\u4ea1\u6570\u5b57\uff0c\u4e00\u65e6\u62e8\u8f6e\u7684\u6570\u5b57\u548c\u5217\u8868\u91cc\u7684\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\uff0c\u8fd9\u4e2a\u9501\u5c06\u4f1a\u88ab\u6c38\u4e45\u9501\u5b9a\uff0c\u65e0\u6cd5\u518d\u88ab\u65cb\u8f6c\u3002</p>\n\n<p>\u5b57\u7b26\u4e32 <code>target</code> \u4ee3\u8868\u53ef\u4ee5\u89e3\u9501\u7684\u6570\u5b57\uff0c\u4f60\u9700\u8981\u7ed9\u51fa\u6700\u5c0f\u7684\u65cb\u8f6c\u6b21\u6570\uff0c\u5982\u679c\u65e0\u8bba\u5982\u4f55\u4e0d\u80fd\u89e3\u9501\uff0c\u8fd4\u56de -1\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>deadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot;\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\n\u53ef\u80fd\u7684\u79fb\u52a8\u5e8f\u5217\u4e3a &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;\u3002\n\u6ce8\u610f &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; \u8fd9\u6837\u7684\u5e8f\u5217\u662f\u4e0d\u80fd\u89e3\u9501\u7684\uff0c\n\u56e0\u4e3a\u5f53\u62e8\u52a8\u5230 &quot;0102&quot; \u65f6\u8fd9\u4e2a\u9501\u5c31\u4f1a\u88ab\u9501\u5b9a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> deadends = [&quot;8888&quot;], target = &quot;0009&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1\n<strong>\u89e3\u91ca\uff1a</strong>\n\u628a\u6700\u540e\u4e00\u4f4d\u53cd\u5411\u65cb\u8f6c\u4e00\u6b21\u5373\u53ef &quot;0000&quot; -&gt; &quot;0009&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> deadends = [&quot;8887&quot;,&quot;8889&quot;,&quot;8878&quot;,&quot;8898&quot;,&quot;8788&quot;,&quot;8988&quot;,&quot;7888&quot;,&quot;9888&quot;], target = &quot;8888&quot;\n<strong>\u8f93\u51fa\uff1a</strong>-1\n<strong>\u89e3\u91ca\uff1a\n</strong>\u65e0\u6cd5\u65cb\u8f6c\u5230\u76ee\u6807\u6570\u5b57\u4e14\u4e0d\u88ab\u9501\u5b9a\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> deadends = [&quot;0000&quot;], target = &quot;8888&quot;\n<strong>\u8f93\u51fa\uff1a</strong>-1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6b7b\u4ea1\u5217\u8868 <code>deadends</code> \u7684\u957f\u5ea6\u8303\u56f4\u4e3a <code>[1, 500]</code>\u3002</li>\n\t<li>\u76ee\u6807\u6570\u5b57 <code>target</code> \u4e0d\u4f1a\u5728 <code>deadends</code> \u4e4b\u4e2d\u3002</li>\n\t<li>\u6bcf\u4e2a <code>deadends</code> \u548c <code>target</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u6570\u5b57\u4f1a\u5728 10,000 \u4e2a\u53ef\u80fd\u7684\u60c5\u51b5 <code>&#39;0000&#39;</code> \u5230 <code>&#39;9999&#39;</code> \u4e2d\u4ea7\u751f\u3002</li>\n</ol>\n","isPaidOnly":false,"difficulty":"Medium","likes":44,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": true, \"python\": true, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Breadth-first Search","slug":"breadth-first-search","translatedName":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int openLock(vector<string>& deadends, string target) {\n        \n    }\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int openLock(String[] deadends, String target) {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def openLock(self, deadends, target):\n        \"\"\"\n        :type deadends: List[str]\n        :type target: str\n        :rtype: int\n        \"\"\"\n        ","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def openLock(self, deadends: List[str], target: str) -> int:\n        ","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\nint openLock(char ** deadends, int deadendsSize, char * target){\n\n}\n\n","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int OpenLock(string[] deadends, string target) {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {string[]} deadends\n * @param {string} target\n * @return {number}\n */\nvar openLock = function(deadends, target) {\n    \n};","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String[]} deadends\n# @param {String} target\n# @return {Integer}\ndef open_lock(deadends, target)\n    \nend","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func openLock(_ deadends: [String], _ target: String) -> Int {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"func openLock(deadends []string, target string) int {\n    \n}","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def openLock(deadends: Array[String], target: String): Int = {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun openLock(deadends: Array<String>, target: String): Int {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn open_lock(deadends: Vec<String>, target: String) -> i32 {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param String[] $deadends\n     * @param String $target\n     * @return Integer\n     */\n    function openLock($deadends, $target) {\n        \n    }\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"3K\", \"totalSubmission\": \"6.3K\", \"totalAcceptedRaw\": 3013, \"totalSubmissionRaw\": 6290, \"acRate\": \"47.9%\"}","hints":["We can think of this problem as a shortest path problem on a graph: there are `10000` nodes (strings `'0000'` to `'9999'`), and there is an edge between two nodes if they differ in one digit, that digit differs by 1 (wrapping around, so `'0'` and `'9'` differ by 1), and if *both* nodes are not in `deadends`."],"solution":null,"status":null,"sampleTestCase":"[\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"]\n\"0202\"","metaData":"{\r\n  \"name\": \"openLock\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"deadends\",\r\n      \"type\": \"string[]\"\r\n    },\r\n    {\r\n      \"name\": \"target\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}