{"data":{"question":{"questionId":"750","questionFrontendId":"749","boundTopicId":1836,"title":"Contain Virus","titleSlug":"contain-virus","content":"<p>\r\nA virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\r\n</p><p>\r\nThe world is modeled as a 2-D array of cells, where <code>0</code> represents uninfected cells, and <code>1</code> represents cells contaminated with the virus.  A wall (and only one wall) can be installed <b>between any two 4-directionally adjacent cells</b>, on the shared boundary.\r\n</p><p>\r\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall.\r\nResources are limited. Each day, you can install walls around only one region -- the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night. There will never be a tie.\r\n</p><p>\r\nCan you save the day? If so, what is the number of walls required? If not, and the world becomes fully infected, return the number of walls used.\r\n</p><p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> grid = \r\n[[0,1,0,0,0,0,0,1],\r\n [0,1,0,0,0,0,0,1],\r\n [0,0,0,0,0,0,0,1],\r\n [0,0,0,0,0,0,0,0]]\r\n<b>Output:</b> 10\r\n<b>Explanation:</b>\r\nThere are 2 contaminated regions.\r\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\r\n\r\n[[0,1,0,0,0,0,1,1],\r\n [0,1,0,0,0,0,1,1],\r\n [0,0,0,0,0,0,1,1],\r\n [0,0,0,0,0,0,0,1]]\r\n\r\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> grid = \r\n[[1,1,1],\r\n [1,0,1],\r\n [1,1,1]]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> Even though there is only one cell saved, there are 4 walls built.\r\nNotice that walls are only built on the shared boundary of two different cells.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input:</b> grid = \r\n[[1,1,1,0,0,0,0,0,0],\r\n [1,0,1,0,1,1,1,1,1],\r\n [1,1,1,0,0,0,0,0,0]]\r\n<b>Output:</b> 13\r\n<b>Explanation:</b> The region on the left only builds two new walls.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The number of rows and columns of <code>grid</code> will each be in the range <code>[1, 50]</code>.</li>\r\n<li>Each <code>grid[i][j]</code> will be either <code>0</code> or <code>1</code>.</li>\r\n<li>Throughout the described process, there is always a contiguous viral region that will infect <b>strictly more</b> uncontaminated squares in the next round.</li>\r\n</ol>\r\n</p>","translatedTitle":"\u9694\u79bb\u75c5\u6bd2","translatedContent":"<p>\u75c5\u6bd2\u6269\u6563\u5f97\u5f88\u5feb\uff0c\u73b0\u5728\u4f60\u7684\u4efb\u52a1\u662f\u5c3d\u53ef\u80fd\u5730\u901a\u8fc7\u5b89\u88c5\u9632\u706b\u5899\u6765\u9694\u79bb\u75c5\u6bd2\u3002</p>\n\n<p>\u5047\u8bbe\u4e16\u754c\u7531\u4e8c\u7ef4\u77e9\u9635\u7ec4\u6210\uff0c<code>0</code> \u8868\u793a\u8be5\u533a\u57df\u672a\u611f\u67d3\u75c5\u6bd2\uff0c\u800c <code>1</code> \u8868\u793a\u8be5\u533a\u57df\u5df2\u611f\u67d3\u75c5\u6bd2\u3002\u53ef\u4ee5\u5728\u4efb\u610f 2 \u4e2a\u56db\u65b9\u5411\u76f8\u90bb\u5355\u5143\u4e4b\u95f4\u7684\u5171\u4eab\u8fb9\u754c\u4e0a\u5b89\u88c5\u4e00\u4e2a\u9632\u706b\u5899\uff08\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u9632\u706b\u5899\uff09\u3002</p>\n\n<p>\u6bcf\u5929\u665a\u4e0a\uff0c\u75c5\u6bd2\u4f1a\u4ece\u88ab\u611f\u67d3\u533a\u57df\u5411\u76f8\u90bb\u672a\u611f\u67d3\u533a\u57df\u6269\u6563\uff0c\u9664\u975e\u88ab\u9632\u706b\u5899\u9694\u79bb\u3002\u73b0\u7531\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u6bcf\u5929\u4f60\u53ea\u80fd\u5b89\u88c5\u4e00\u7cfb\u5217\u9632\u706b\u5899\u6765\u9694\u79bb\u5176\u4e2d\u4e00\u4e2a\u88ab\u75c5\u6bd2\u611f\u67d3\u7684\u533a\u57df\uff08\u4e00\u4e2a\u533a\u57df\u6216\u8fde\u7eed\u7684\u4e00\u7247\u533a\u57df\uff09\uff0c\u4e14\u8be5\u611f\u67d3\u533a\u57df\u5bf9\u672a\u611f\u67d3\u533a\u57df\u7684\u5a01\u80c1\u6700\u5927\u4e14\u4fdd\u8bc1\u552f\u4e00\u3002</p>\n\n<p>\u4f60\u9700\u8981\u52aa\u529b\u4f7f\u5f97\u6700\u540e\u6709\u90e8\u5206\u533a\u57df\u4e0d\u88ab\u75c5\u6bd2\u611f\u67d3\uff0c\u5982\u679c\u53ef\u4ee5\u6210\u529f\uff0c\u90a3\u4e48\u8fd4\u56de\u9700\u8981\u4f7f\u7528\u7684\u9632\u706b\u5899\u4e2a\u6570; \u5982\u679c\u65e0\u6cd5\u5b9e\u73b0\uff0c\u5219\u8fd4\u56de\u5728\u4e16\u754c\u88ab\u75c5\u6bd2\u5168\u90e8\u611f\u67d3\u65f6\u5df2\u5b89\u88c5\u7684\u9632\u706b\u5899\u4e2a\u6570\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[0,1,0,0,0,0,0,1],\n [0,1,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,0]]\n<strong>\u8f93\u51fa:</strong> 10\n<strong>\u8bf4\u660e:</strong>\n\u4e00\u5171\u6709\u4e24\u5757\u88ab\u75c5\u6bd2\u611f\u67d3\u7684\u533a\u57df: \u4ece\u5de6\u5f80\u53f3\u7b2c\u4e00\u5757\u9700\u8981 5 \u4e2a\u9632\u706b\u5899\uff0c\u540c\u65f6\u82e5\u8be5\u533a\u57df\u4e0d\u9694\u79bb\uff0c\u665a\u4e0a\u5c06\u611f\u67d3 5 \u4e2a\u672a\u611f\u67d3\u533a\u57df\uff08\u5373\u88ab\u5a01\u80c1\u7684\u672a\u611f\u67d3\u533a\u57df\u4e2a\u6570\u4e3a 5\uff09;\n\u7b2c\u4e8c\u5757\u9700\u8981 4 \u4e2a\u9632\u706b\u5899\uff0c\u540c\u7406\u88ab\u5a01\u80c1\u7684\u672a\u611f\u67d3\u533a\u57df\u4e2a\u6570\u662f 4\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u5929\u5148\u9694\u79bb\u5de6\u8fb9\u7684\u611f\u67d3\u533a\u57df\uff0c\u7ecf\u8fc7\u4e00\u665a\u540e\uff0c\u75c5\u6bd2\u4f20\u64ad\u540e\u4e16\u754c\u5982\u4e0b:\n[[0,1,0,0,0,0,1,1],\n [0,1,0,0,0,0,1,1],\n [0,0,0,0,0,0,1,1],\n [0,0,0,0,0,0,0,1]]\n\u7b2c\u4e8c\u9898\uff0c\u53ea\u5269\u4e0b\u4e00\u5757\u672a\u9694\u79bb\u7684\u88ab\u611f\u67d3\u7684\u8fde\u7eed\u533a\u57df\uff0c\u6b64\u65f6\u9700\u8981\u5b89\u88c5 5 \u4e2a\u9632\u706b\u5899\uff0c\u4e14\u5b89\u88c5\u5b8c\u6bd5\u540e\u75c5\u6bd2\u9694\u79bb\u4efb\u52a1\u5b8c\u6210\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<strong>\u8f93\u51fa:</strong> 4\n<strong>\u8bf4\u660e:</strong> \n\u6b64\u65f6\u53ea\u9700\u8981\u5b89\u88c5 4 \u9762\u9632\u706b\u5899\uff0c\u5c31\u6709\u4e00\u5c0f\u533a\u57df\u53ef\u4ee5\u5e78\u5b58\uff0c\u4e0d\u88ab\u75c5\u6bd2\u611f\u67d3\u3002\n\u6ce8\u610f\u4e0d\u9700\u8981\u5728\u4e16\u754c\u8fb9\u754c\u5efa\u7acb\u9632\u706b\u5899\u3002</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> grid = \n[[1,1,1,0,0,0,0,0,0],\n [1,0,1,0,1,1,1,1,1],\n [1,1,1,0,0,0,0,0,0]]\n<strong>\u8f93\u51fa:</strong> 13\n<strong>\u8bf4\u660e:</strong> \n\u5728\u9694\u79bb\u53f3\u8fb9\u611f\u67d3\u533a\u57df\u540e\uff0c\u9694\u79bb\u5de6\u8fb9\u75c5\u6bd2\u533a\u57df\u53ea\u9700\u8981 2 \u4e2a\u9632\u706b\u5899\u4e86\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li><code>grid</code> \u7684\u884c\u6570\u548c\u5217\u6570\u8303\u56f4\u662f [1, 50]\u3002</li>\n\t<li>&nbsp;<code>grid[i][j]</code>&nbsp;\u53ea\u5305\u542b&nbsp;<code>0</code>&nbsp;\u6216&nbsp;<code>1</code>&nbsp;\u3002</li>\n\t<li>\u9898\u76ee\u4fdd\u8bc1\u6bcf\u6b21\u9009\u53d6\u611f\u67d3\u533a\u57df\u8fdb\u884c\u9694\u79bb\u65f6\uff0c\u4e00\u5b9a\u5b58\u5728\u552f\u4e00\u4e00\u4e2a\u5bf9\u672a\u611f\u67d3\u533a\u57df\u7684\u5a01\u80c1\u6700\u5927\u7684\u533a\u57df\u3002</li>\n</ol>\n\n<p>&nbsp;</p>\n","isPaidOnly":false,"difficulty":"Hard","likes":3,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": true, \"python\": true, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Depth-first Search","slug":"depth-first-search","translatedName":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    int containVirus(vector<vector<int>>& grid) {\n        \n    }\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public int containVirus(int[][] grid) {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def containVirus(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"\n        ","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def containVirus(self, grid: List[List[int]]) -> int:\n        ","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\nint containVirus(int** grid, int gridSize, int* gridColSize){\n\n}\n\n","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public int ContainVirus(int[][] grid) {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar containVirus = function(grid) {\n    \n};","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[][]} grid\n# @return {Integer}\ndef contain_virus(grid)\n    \nend","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func containVirus(_ grid: [[Int]]) -> Int {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"func containVirus(grid [][]int) int {\n    \n}","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def containVirus(grid: Array[Array[Int]]): Int = {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun containVirus(grid: Array<IntArray>): Int {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn contain_virus(grid: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function containVirus($grid) {\n        \n    }\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"135\", \"totalSubmission\": \"260\", \"totalAcceptedRaw\": 135, \"totalSubmissionRaw\": 260, \"acRate\": \"51.9%\"}","hints":["The implementation is long - we want to perfrom the following steps:\r\n\r\n* Find all viral regions (connected components), additionally for each region keeping track of the frontier (neighboring uncontaminated cells), and the perimeter of the region.\r\n\r\n* Disinfect the most viral region, adding it's perimeter to the answer.\r\n\r\n* Spread the virus in the remaining regions outward by 1 square."],"solution":null,"status":null,"sampleTestCase":"[[0,1,0,0,0,0,0,1],[0,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0]]","metaData":"{\r\n  \"name\": \"containVirus\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"grid\",\r\n      \"type\": \"integer[][]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}