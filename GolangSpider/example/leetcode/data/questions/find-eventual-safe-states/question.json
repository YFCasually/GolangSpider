{"data":{"question":{"questionId":"820","questionFrontendId":"802","boundTopicId":1907,"title":"Find Eventual Safe States","titleSlug":"find-eventual-safe-states","content":"<p>In a directed graph, we start at some node and every turn, walk along a directed edge of the graph.&nbsp; If we reach a node that is terminal (that is, it has no outgoing directed edges), we stop.</p>\r\n\r\n<p>Now, say our starting node is <em>eventually safe&nbsp;</em>if and only if we must eventually walk to a terminal node.&nbsp; More specifically, there exists a natural number <code>K</code> so that for any choice of where to walk, we must have stopped at a terminal node in less than <code>K</code> steps.</p>\r\n\r\n<p>Which nodes are eventually safe?&nbsp; Return them as an array in sorted order.</p>\r\n\r\n<p>The directed graph has <code>N</code> nodes with labels <code>0, 1, ..., N-1</code>, where <code>N</code> is the length of <code>graph</code>.&nbsp; The&nbsp;graph is given in the following form: <code>graph[i]</code> is a list of labels <code>j</code> such that <code>(i, j)</code> is a directed edge of the graph.</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> graph = [[1,2],[2,3],[5],[0],[5],[],[]]\r\n<strong>Output:</strong> [2,4,5,6]\r\nHere is a diagram of the above graph.\r\n\r\n</pre>\r\n\r\n<p><img alt=\"Illustration of graph\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png\" style=\"height:86px; width:300px\" /></p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>graph</code> will have length at most <code>10000</code>.</li>\r\n\t<li>The number of edges in the graph will not exceed <code>32000</code>.</li>\r\n\t<li>Each <code>graph[i]</code> will be a sorted list of different integers, chosen within the range <code>[0, graph.length - 1]</code>.</li>\r\n</ul>\r\n","translatedTitle":"\u627e\u5230\u6700\u7ec8\u7684\u5b89\u5168\u72b6\u6001","translatedContent":"<p>\u5728\u6709\u5411\u56fe\u4e2d, \u6211\u4eec\u4ece\u67d0\u4e2a\u8282\u70b9\u548c\u6bcf\u4e2a\u8f6c\u5411\u5904\u5f00\u59cb, \u6cbf\u7740\u56fe\u7684\u6709\u5411\u8fb9\u8d70\u3002 \u5982\u679c\u6211\u4eec\u5230\u8fbe\u7684\u8282\u70b9\u662f\u7ec8\u70b9 (\u5373\u5b83\u6ca1\u6709\u8fde\u51fa\u7684\u6709\u5411\u8fb9), \u6211\u4eec\u505c\u6b62\u3002</p>\n\n<p>\u73b0\u5728, \u5982\u679c\u6211\u4eec\u6700\u540e\u80fd\u8d70\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8d77\u59cb\u8282\u70b9\u662f<em>\u6700\u7ec8\u5b89\u5168</em>\u7684\u3002 \u66f4\u5177\u4f53\u5730\u8bf4, \u5b58\u5728\u4e00\u4e2a\u81ea\u7136\u6570 <code>K</code>,&nbsp; \u65e0\u8bba\u9009\u62e9\u4ece\u54ea\u91cc\u5f00\u59cb\u884c\u8d70, \u6211\u4eec\u8d70\u4e86\u4e0d\u5230 <code>K</code> \u6b65\u540e\u5fc5\u80fd\u505c\u6b62\u5728\u4e00\u4e2a\u7ec8\u70b9\u3002</p>\n\n<p>\u54ea\u4e9b\u8282\u70b9\u6700\u7ec8\u662f\u5b89\u5168\u7684\uff1f \u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u3002</p>\n\n<p>\u8be5\u6709\u5411\u56fe\u6709 <code>N</code> \u4e2a\u8282\u70b9\uff0c\u6807\u7b7e\u4e3a <code>0, 1, ..., N-1</code>, \u5176\u4e2d <code>N</code> \u662f&nbsp;<code>graph</code>&nbsp;\u7684\u8282\u70b9\u6570.&nbsp; \u56fe\u4ee5\u4ee5\u4e0b\u7684\u5f62\u5f0f\u7ed9\u51fa: <code>graph[i]</code> \u662f\u8282\u70b9 <code>j</code> \u7684\u4e00\u4e2a\u5217\u8868\uff0c\u6ee1\u8db3 <code>(i, j)</code> \u662f\u56fe\u7684\u4e00\u6761\u6709\u5411\u8fb9\u3002</p>\n\n<pre>\n<strong>\u793a\u4f8b\uff1a</strong>\n<strong>\u8f93\u5165\uff1a</strong>graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n<strong>\u8f93\u51fa\uff1a</strong>[2,4,5,6]\n\u8fd9\u91cc\u662f\u4e0a\u56fe\u7684\u793a\u610f\u56fe\u3002\n\n</pre>\n\n<p><img alt=\"Illustration of graph\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png\" style=\"height:86px; width:300px\" /></p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>graph</code> \u8282\u70b9\u6570\u4e0d\u8d85\u8fc7 <code>10000</code>.</li>\n\t<li>\u56fe\u7684\u8fb9\u6570\u4e0d\u4f1a\u8d85\u8fc7 <code>32000</code>.</li>\n\t<li>\u6bcf\u4e2a <code>graph[i]</code> \u88ab\u6392\u5e8f\u4e3a\u4e0d\u540c\u7684\u6574\u6570\u5217\u8868\uff0c \u5728\u533a\u95f4 <code>[0, graph.length - 1]</code>&nbsp;\u4e2d\u9009\u53d6\u3002</li>\n</ul>\n","isPaidOnly":false,"difficulty":"Medium","likes":12,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": true, \"python\": true, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Depth-first Search","slug":"depth-first-search","translatedName":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","__typename":"TopicTagNode"},{"name":"Graph","slug":"graph","translatedName":"\u56fe","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\npublic:\n    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {\n        \n    }\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class Solution {\n    public List<Integer> eventualSafeNodes(int[][] graph) {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\n    def eventualSafeNodes(self, graph):\n        \"\"\"\n        :type graph: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n        ","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class Solution:\n    def eventualSafeNodes(self, graph: List[List[int]]) -> List[int]:\n        ","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* eventualSafeNodes(int** graph, int graphSize, int* graphColSize, int* returnSize){\n\n}\n\n","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\n    public IList<int> EventualSafeNodes(int[][] graph) {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number[][]} graph\n * @return {number[]}\n */\nvar eventualSafeNodes = function(graph) {\n    \n};","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[][]} graph\n# @return {Integer[]}\ndef eventual_safe_nodes(graph)\n    \nend","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\n    func eventualSafeNodes(_ graph: [[Int]]) -> [Int] {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"func eventualSafeNodes(graph [][]int) []int {\n    \n}","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\n    def eventualSafeNodes(graph: Array[Array[Int]]): List[Int] = {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\n    fun eventualSafeNodes(graph: Array<IntArray>): List<Int> {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\n    pub fn eventual_safe_nodes(graph: Vec<Vec<i32>>) -> Vec<i32> {\n        \n    }\n}","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class Solution {\n\n    /**\n     * @param Integer[][] $graph\n     * @return Integer[]\n     */\n    function eventualSafeNodes($graph) {\n        \n    }\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"514\", \"totalSubmission\": \"1.4K\", \"totalAcceptedRaw\": 514, \"totalSubmissionRaw\": 1371, \"acRate\": \"37.5%\"}","hints":[],"solution":null,"status":null,"sampleTestCase":"[[1,2],[2,3],[5],[0],[5],[],[]]","metaData":"{\r\n  \"name\": \"eventualSafeNodes\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"graph\",\r\n      \"type\": \"integer[][]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"list<integer>\"\r\n  }\r\n}\r\n","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}