{"data":{"question":{"questionId":"715","questionFrontendId":"715","boundTopicId":1825,"title":"Range Module","titleSlug":"range-module","content":"<p>A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.</p>\r\n\r\n<p><li><code>addRange(int left, int right)</code> Adds the half-open interval <code>[left, right)</code>, tracking every real number in that interval.  Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval <code>[left, right)</code> that are not already tracked.</li></p>\r\n\r\n<p><li><code>queryRange(int left, int right)</code> Returns true if and only if every real number in the interval <code>[left, right)</code>\r\n is currently being tracked.</li></p>\r\n\r\n<p><li><code>removeRange(int left, int right)</code> Stops tracking every real number currently being tracked in the interval <code>[left, right)</code>.</li></p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>addRange(10, 20)</b>: null\r\n<b>removeRange(14, 16)</b>: null\r\n<b>queryRange(10, 14)</b>: true (Every number in [10, 14) is being tracked)\r\n<b>queryRange(13, 15)</b>: false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\r\n<b>queryRange(16, 17)</b>: true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>A half open interval <code>[left, right)</code> denotes all real numbers <code>left <= x < right</code>.</li>\r\n\r\n<li><code>0 < left < right < 10^9</code> in all calls to <code>addRange, queryRange, removeRange</code>.</li>\r\n<li>The total number of calls to <code>addRange</code> in a single test case is at most <code>1000</code>.</li>\r\n<li>The total number of calls to <code>queryRange</code> in a single test case is at most <code>5000</code>.</li>\r\n<li>The total number of calls to <code>removeRange</code> in a single test case is at most <code>1000</code>.</li>\r\n</p>","translatedTitle":"Range \u6a21\u5757","translatedContent":"<p>Range \u6a21\u5757\u662f\u8ddf\u8e2a\u6570\u5b57\u8303\u56f4\u7684\u6a21\u5757\u3002\u4f60\u7684\u4efb\u52a1\u662f\u4ee5\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u8bbe\u8ba1\u548c\u5b9e\u73b0\u4ee5\u4e0b\u63a5\u53e3\u3002</p>\n\n<ul>\n\t<li><code>addRange(int left, int right)</code> \u6dfb\u52a0\u534a\u5f00\u533a\u95f4&nbsp;<code>[left, right)</code>\uff0c\u8ddf\u8e2a\u8be5\u533a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u6570\u3002\u6dfb\u52a0\u4e0e\u5f53\u524d\u8ddf\u8e2a\u7684\u6570\u5b57\u90e8\u5206\u91cd\u53e0\u7684\u533a\u95f4\u65f6\uff0c\u5e94\u5f53\u6dfb\u52a0\u5728\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u4e2d\u5c1a\u672a\u8ddf\u8e2a\u7684\u4efb\u4f55\u6570\u5b57\u5230\u8be5\u533a\u95f4\u4e2d\u3002</li>\n\t<li><code>queryRange(int left, int right)</code>&nbsp;\u53ea\u6709\u5728\u5f53\u524d\u6b63\u5728\u8ddf\u8e2a\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b9e\u6570\u65f6\uff0c\u624d\u8fd4\u56de true\u3002</li>\n\t<li><code>removeRange(int left, int right)</code>&nbsp;\u505c\u6b62\u8ddf\u8e2a\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u4e2d\u5f53\u524d\u6b63\u5728\u8ddf\u8e2a\u7684\u6bcf\u4e2a\u5b9e\u6570\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>addRange(10, 20)</strong>: null\n<strong>removeRange(14, 16)</strong>: null\n<strong>queryRange(10, 14)</strong>: true \uff08\u533a\u95f4 [10, 14) \u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u6b63\u5728\u88ab\u8ddf\u8e2a\uff09\n<strong>queryRange(13, 15)</strong>: false \uff08\u672a\u8ddf\u8e2a\u533a\u95f4 [13, 15) \u4e2d\u50cf 14, 14.03, 14.17 \u8fd9\u6837\u7684\u6570\u5b57\uff09\n<strong>queryRange(16, 17)</strong>: true \uff08\u5c3d\u7ba1\u6267\u884c\u4e86\u5220\u9664\u64cd\u4f5c\uff0c\u533a\u95f4 [16, 17) \u4e2d\u7684\u6570\u5b57 16 \u4ecd\u7136\u4f1a\u88ab\u8ddf\u8e2a\uff09\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u534a\u5f00\u533a\u95f4&nbsp;<code>[left, right)</code>&nbsp;\u8868\u793a\u6240\u6709\u6ee1\u8db3&nbsp;<code>left &lt;= x &lt; right</code>&nbsp;\u7684\u5b9e\u6570\u3002</li>\n\t<li>\u5bf9&nbsp;<code>addRange, queryRange, removeRange</code>&nbsp;\u7684\u6240\u6709\u8c03\u7528\u4e2d&nbsp;<code>0 &lt; left &lt; right &lt; 10^9</code>\u3002</li>\n\t<li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9&nbsp;<code>addRange</code>&nbsp;\u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7&nbsp;<code>1000</code>&nbsp;\u6b21\u3002</li>\n\t<li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9&nbsp; <code>queryRange</code> \u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7 <code>5000</code> \u6b21\u3002</li>\n\t<li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9 <code>removeRange</code> \u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7&nbsp;<code>1000</code>&nbsp;\u6b21\u3002</li>\n</ul>\n\n<p>&nbsp;</p>\n","isPaidOnly":false,"difficulty":"Hard","likes":11,"dislikes":0,"isLiked":null,"similarQuestions":"[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": \"\\u5408\\u5e76\\u533a\\u95f4\"}, {\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Hard\", \"translatedTitle\": \"\\u63d2\\u5165\\u533a\\u95f4\"}, {\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": \"\\u5c06\\u6570\\u636e\\u6d41\\u53d8\\u4e3a\\u591a\\u4e2a\\u4e0d\\u76f8\\u4ea4\\u533a\\u95f4\"}]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Segment Tree","slug":"segment-tree","translatedName":"\u7ebf\u6bb5\u6811","__typename":"TopicTagNode"},{"name":"Ordered Map","slug":"ordered-map","translatedName":null,"__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class RangeModule {\r\npublic:\r\n    RangeModule() {\r\n        \r\n    }\r\n    \r\n    void addRange(int left, int right) {\r\n        \r\n    }\r\n    \r\n    bool queryRange(int left, int right) {\r\n        \r\n    }\r\n    \r\n    void removeRange(int left, int right) {\r\n        \r\n    }\r\n};\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * RangeModule* obj = new RangeModule();\r\n * obj->addRange(left,right);\r\n * bool param_2 = obj->queryRange(left,right);\r\n * obj->removeRange(left,right);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class RangeModule {\r\n\r\n    public RangeModule() {\r\n        \r\n    }\r\n    \r\n    public void addRange(int left, int right) {\r\n        \r\n    }\r\n    \r\n    public boolean queryRange(int left, int right) {\r\n        \r\n    }\r\n    \r\n    public void removeRange(int left, int right) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * RangeModule obj = new RangeModule();\r\n * obj.addRange(left,right);\r\n * boolean param_2 = obj.queryRange(left,right);\r\n * obj.removeRange(left,right);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class RangeModule(object):\r\n\r\n    def __init__(self):\r\n        \r\n\r\n    def addRange(self, left, right):\r\n        \"\"\"\r\n        :type left: int\r\n        :type right: int\r\n        :rtype: None\r\n        \"\"\"\r\n        \r\n\r\n    def queryRange(self, left, right):\r\n        \"\"\"\r\n        :type left: int\r\n        :type right: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n    def removeRange(self, left, right):\r\n        \"\"\"\r\n        :type left: int\r\n        :type right: int\r\n        :rtype: None\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your RangeModule object will be instantiated and called as such:\r\n# obj = RangeModule()\r\n# obj.addRange(left,right)\r\n# param_2 = obj.queryRange(left,right)\r\n# obj.removeRange(left,right)","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class RangeModule:\r\n\r\n    def __init__(self):\r\n        \r\n\r\n    def addRange(self, left: int, right: int) -> None:\r\n        \r\n\r\n    def queryRange(self, left: int, right: int) -> bool:\r\n        \r\n\r\n    def removeRange(self, left: int, right: int) -> None:\r\n        \r\n\r\n\r\n# Your RangeModule object will be instantiated and called as such:\r\n# obj = RangeModule()\r\n# obj.addRange(left,right)\r\n# param_2 = obj.queryRange(left,right)\r\n# obj.removeRange(left,right)","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"typedef struct {\r\n    \r\n} RangeModule;\r\n\r\n\r\nRangeModule* rangeModuleCreate() {\r\n    \r\n}\r\n\r\nvoid rangeModuleAddRange(RangeModule* obj, int left, int right) {\r\n  \r\n}\r\n\r\nbool rangeModuleQueryRange(RangeModule* obj, int left, int right) {\r\n  \r\n}\r\n\r\nvoid rangeModuleRemoveRange(RangeModule* obj, int left, int right) {\r\n  \r\n}\r\n\r\nvoid rangeModuleFree(RangeModule* obj) {\r\n    \r\n}\r\n\r\n/**\r\n * Your RangeModule struct will be instantiated and called as such:\r\n * RangeModule* obj = rangeModuleCreate();\r\n * rangeModuleAddRange(obj, left, right);\r\n \r\n * bool param_2 = rangeModuleQueryRange(obj, left, right);\r\n \r\n * rangeModuleRemoveRange(obj, left, right);\r\n \r\n * rangeModuleFree(obj);\r\n*/","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class RangeModule {\r\n\r\n    public RangeModule() {\r\n        \r\n    }\r\n    \r\n    public void AddRange(int left, int right) {\r\n        \r\n    }\r\n    \r\n    public bool QueryRange(int left, int right) {\r\n        \r\n    }\r\n    \r\n    public void RemoveRange(int left, int right) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * RangeModule obj = new RangeModule();\r\n * obj.AddRange(left,right);\r\n * bool param_2 = obj.QueryRange(left,right);\r\n * obj.RemoveRange(left,right);\r\n */","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"var RangeModule = function() {\r\n    \r\n};\r\n\r\n/** \r\n * @param {number} left \r\n * @param {number} right\r\n * @return {void}\r\n */\r\nRangeModule.prototype.addRange = function(left, right) {\r\n    \r\n};\r\n\r\n/** \r\n * @param {number} left \r\n * @param {number} right\r\n * @return {boolean}\r\n */\r\nRangeModule.prototype.queryRange = function(left, right) {\r\n    \r\n};\r\n\r\n/** \r\n * @param {number} left \r\n * @param {number} right\r\n * @return {void}\r\n */\r\nRangeModule.prototype.removeRange = function(left, right) {\r\n    \r\n};\r\n\r\n/** \r\n * Your RangeModule object will be instantiated and called as such:\r\n * var obj = new RangeModule()\r\n * obj.addRange(left,right)\r\n * var param_2 = obj.queryRange(left,right)\r\n * obj.removeRange(left,right)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"class RangeModule\r\n    def initialize()\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type left: Integer\r\n    :type right: Integer\r\n    :rtype: Void\r\n=end\r\n    def add_range(left, right)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type left: Integer\r\n    :type right: Integer\r\n    :rtype: Boolean\r\n=end\r\n    def query_range(left, right)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type left: Integer\r\n    :type right: Integer\r\n    :rtype: Void\r\n=end\r\n    def remove_range(left, right)\r\n        \r\n    end\r\n\r\n\r\nend\r\n\r\n# Your RangeModule object will be instantiated and called as such:\r\n# obj = RangeModule.new()\r\n# obj.add_range(left, right)\r\n# param_2 = obj.query_range(left, right)\r\n# obj.remove_range(left, right)","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class RangeModule {\r\n\r\n    init() {\r\n        \r\n    }\r\n    \r\n    func addRange(_ left: Int, _ right: Int) {\r\n        \r\n    }\r\n    \r\n    func queryRange(_ left: Int, _ right: Int) -> Bool {\r\n        \r\n    }\r\n    \r\n    func removeRange(_ left: Int, _ right: Int) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * let obj = RangeModule()\r\n * obj.addRange(left, right)\r\n * let ret_2: Bool = obj.queryRange(left, right)\r\n * obj.removeRange(left, right)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"type RangeModule struct {\r\n    \r\n}\r\n\r\n\r\nfunc Constructor() RangeModule {\r\n    \r\n}\r\n\r\n\r\nfunc (this *RangeModule) AddRange(left int, right int)  {\r\n    \r\n}\r\n\r\n\r\nfunc (this *RangeModule) QueryRange(left int, right int) bool {\r\n    \r\n}\r\n\r\n\r\nfunc (this *RangeModule) RemoveRange(left int, right int)  {\r\n    \r\n}\r\n\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * obj := Constructor();\r\n * obj.AddRange(left,right);\r\n * param_2 := obj.QueryRange(left,right);\r\n * obj.RemoveRange(left,right);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"class RangeModule() {\r\n\r\n    def addRange(left: Int, right: Int) {\r\n        \r\n    }\r\n\r\n    def queryRange(left: Int, right: Int): Boolean = {\r\n        \r\n    }\r\n\r\n    def removeRange(left: Int, right: Int) {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * var obj = new RangeModule()\r\n * obj.addRange(left,right)\r\n * var param_2 = obj.queryRange(left,right)\r\n * obj.removeRange(left,right)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class RangeModule() {\r\n\r\n    fun addRange(left: Int, right: Int) {\r\n        \r\n    }\r\n\r\n    fun queryRange(left: Int, right: Int): Boolean {\r\n        \r\n    }\r\n\r\n    fun removeRange(left: Int, right: Int) {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * var obj = RangeModule()\r\n * obj.addRange(left,right)\r\n * var param_2 = obj.queryRange(left,right)\r\n * obj.removeRange(left,right)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"struct RangeModule {\r\n\r\n}\r\n\r\n\r\n/** \r\n * `&self` means the method takes an immutable reference.\r\n * If you need a mutable reference, change it to `&mut self` instead.\r\n */\r\nimpl RangeModule {\r\n\r\n    fn new() -> Self {\r\n        \r\n    }\r\n    \r\n    fn add_range(&self, left: i32, right: i32) {\r\n        \r\n    }\r\n    \r\n    fn query_range(&self, left: i32, right: i32) -> bool {\r\n        \r\n    }\r\n    \r\n    fn remove_range(&self, left: i32, right: i32) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * let obj = RangeModule::new();\r\n * obj.add_range(left, right);\r\n * let ret_2: bool = obj.query_range(left, right);\r\n * obj.remove_range(left, right);\r\n */","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class RangeModule {\r\n    /**\r\n     */\r\n    function __construct() {\r\n        \r\n    }\r\n  \r\n    /**\r\n     * @param Integer $left\r\n     * @param Integer $right\r\n     * @return NULL\r\n     */\r\n    function addRange($left, $right) {\r\n        \r\n    }\r\n  \r\n    /**\r\n     * @param Integer $left\r\n     * @param Integer $right\r\n     * @return Boolean\r\n     */\r\n    function queryRange($left, $right) {\r\n        \r\n    }\r\n  \r\n    /**\r\n     * @param Integer $left\r\n     * @param Integer $right\r\n     * @return NULL\r\n     */\r\n    function removeRange($left, $right) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your RangeModule object will be instantiated and called as such:\r\n * $obj = RangeModule();\r\n * $obj->addRange($left, $right);\r\n * $ret_2 = $obj->queryRange($left, $right);\r\n * $obj->removeRange($left, $right);\r\n */","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"164\", \"totalSubmission\": \"573\", \"totalAcceptedRaw\": 164, \"totalSubmissionRaw\": 573, \"acRate\": \"28.6%\"}","hints":["Maintain a sorted set of disjoint intervals.  addRange and removeRange can be performed with time complexity linear to the size of this set; queryRange can be performed with time complexity logarithmic to the size of this set."],"solution":null,"status":null,"sampleTestCase":"[\"RangeModule\",\"addRange\",\"removeRange\",\"queryRange\",\"queryRange\",\"queryRange\"]\n[[],[10,20],[14,16],[10,14],[13,15],[16,17]]","metaData":"{\r\n    \"classname\": \"RangeModule\",\r\n    \"constructor\": {\r\n        \"params\": []\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"addRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"left\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"right\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"queryRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"left\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"right\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"boolean\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"removeRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"left\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"right\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"lefts\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"rights\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}