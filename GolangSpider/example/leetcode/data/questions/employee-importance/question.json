{"data":{"question":{"questionId":"690","questionFrontendId":"690","boundTopicId":1118,"title":"Employee Importance","titleSlug":"employee-importance","content":"<p>You are given a data structure of employee information, which includes the employee&#39;s <b>unique id</b>, his <b>importance value</b> and his <b>direct</b> subordinates&#39; id.</p>\r\n\r\n<p>For example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is <b>not direct</b>.</p>\r\n\r\n<p>Now given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all his subordinates.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\r\n<b>Output:</b> 11\r\n<b>Explanation:</b>\r\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>One employee has at most one <b>direct</b> leader and may have several subordinates.</li>\r\n\t<li>The maximum number of employees won&#39;t exceed 2000.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n","translatedTitle":"\u5458\u5de5\u7684\u91cd\u8981\u6027","translatedContent":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4fdd\u5b58\u5458\u5de5\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u4e86\u5458\u5de5<strong>\u552f\u4e00\u7684id</strong>\uff0c<strong>\u91cd\u8981\u5ea6&nbsp;</strong>\u548c <strong>\u76f4\u7cfb\u4e0b\u5c5e\u7684id</strong>\u3002</p>\n\n<p>\u6bd4\u5982\uff0c\u5458\u5de51\u662f\u5458\u5de52\u7684\u9886\u5bfc\uff0c\u5458\u5de52\u662f\u5458\u5de53\u7684\u9886\u5bfc\u3002\u4ed6\u4eec\u76f8\u5e94\u7684\u91cd\u8981\u5ea6\u4e3a15, 10, 5\u3002\u90a3\u4e48\u5458\u5de51\u7684\u6570\u636e\u7ed3\u6784\u662f[1, 15, [2]]\uff0c\u5458\u5de52\u7684\u6570\u636e\u7ed3\u6784\u662f[2, 10, [3]]\uff0c\u5458\u5de53\u7684\u6570\u636e\u7ed3\u6784\u662f[3, 5, []]\u3002\u6ce8\u610f\u867d\u7136\u5458\u5de53\u4e5f\u662f\u5458\u5de51\u7684\u4e00\u4e2a\u4e0b\u5c5e\uff0c\u4f46\u662f\u7531\u4e8e<strong>\u5e76\u4e0d\u662f\u76f4\u7cfb</strong>\u4e0b\u5c5e\uff0c\u56e0\u6b64\u6ca1\u6709\u4f53\u73b0\u5728\u5458\u5de51\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002</p>\n\n<p>\u73b0\u5728\u8f93\u5165\u4e00\u4e2a\u516c\u53f8\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f\uff0c\u4ee5\u53ca\u5355\u4e2a\u5458\u5de5id\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5458\u5de5\u548c\u4ed6\u6240\u6709\u4e0b\u5c5e\u7684\u91cd\u8981\u5ea6\u4e4b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\n<strong>\u8f93\u5165:</strong> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\n<strong>\u8f93\u51fa:</strong> 11\n<strong>\u89e3\u91ca:</strong>\n\u5458\u5de51\u81ea\u8eab\u7684\u91cd\u8981\u5ea6\u662f5\uff0c\u4ed6\u6709\u4e24\u4e2a\u76f4\u7cfb\u4e0b\u5c5e2\u548c3\uff0c\u800c\u4e142\u548c3\u7684\u91cd\u8981\u5ea6\u5747\u4e3a3\u3002\u56e0\u6b64\u5458\u5de51\u7684\u603b\u91cd\u8981\u5ea6\u662f 5 + 3 + 3 = 11\u3002\n</pre>\n\n<p><strong>\u6ce8\u610f:</strong></p>\n\n<ol>\n\t<li>\u4e00\u4e2a\u5458\u5de5\u6700\u591a\u6709\u4e00\u4e2a<strong>\u76f4\u7cfb</strong>\u9886\u5bfc\uff0c\u4f46\u662f\u53ef\u4ee5\u6709\u591a\u4e2a<strong>\u76f4\u7cfb</strong>\u4e0b\u5c5e</li>\n\t<li>\u5458\u5de5\u6570\u91cf\u4e0d\u8d85\u8fc72000\u3002</li>\n</ol>\n","isPaidOnly":false,"difficulty":"Easy","likes":46,"dislikes":0,"isLiked":null,"similarQuestions":"[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": \"\\u5d4c\\u5957\\u5217\\u8868\\u6743\\u91cd\\u548c\"}]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Depth-first Search","slug":"depth-first-search","translatedName":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","__typename":"TopicTagNode"},{"name":"Breadth-first Search","slug":"breadth-first-search","translatedName":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","__typename":"TopicTagNode"},{"name":"Hash Table","slug":"hash-table","translatedName":"\u54c8\u5e0c\u8868","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"/*\r\n// Employee info\r\nclass Employee {\r\npublic:\r\n    // It's the unique ID of each node.\r\n    // unique id of this employee\r\n    int id;\r\n    // the importance value of this employee\r\n    int importance;\r\n    // the id of direct subordinates\r\n    vector<int> subordinates;\r\n};\r\n*/\r\nclass Solution {\r\npublic:\r\n    int getImportance(vector<Employee*> employees, int id) {\r\n        \r\n    }\r\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"/*\r\n// Employee info\r\nclass Employee {\r\n    // It's the unique id of each node;\r\n    // unique id of this employee\r\n    public int id;\r\n    // the importance value of this employee\r\n    public int importance;\r\n    // the id of direct subordinates\r\n    public List<Integer> subordinates;\r\n};\r\n*/\r\nclass Solution {\r\n    public int getImportance(List<Employee> employees, int id) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"\"\"\"\r\n# Employee info\r\nclass Employee(object):\r\n    def __init__(self, id, importance, subordinates):\r\n        # It's the unique id of each node.\r\n        # unique id of this employee\r\n        self.id = id\r\n        # the importance value of this employee\r\n        self.importance = importance\r\n        # the id of direct subordinates\r\n        self.subordinates = subordinates\r\n\"\"\"\r\nclass Solution(object):\r\n    def getImportance(self, employees, id):\r\n        \"\"\"\r\n        :type employees: Employee\r\n        :type id: int\r\n        :rtype: int\r\n        \"\"\"\r\n        ","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"\"\"\"\r\n# Employee info\r\nclass Employee:\r\n    def __init__(self, id, importance, subordinates):\r\n        # It's the unique id of each node.\r\n        # unique id of this employee\r\n        self.id = id\r\n        # the importance value of this employee\r\n        self.importance = importance\r\n        # the id of direct subordinates\r\n        self.subordinates = subordinates\r\n\"\"\"\r\nclass Solution:\r\n    def getImportance(self, employees, id):\r\n        \"\"\"\r\n        :type employees: Employee\r\n        :type id: int\r\n        :rtype: int\r\n        \"\"\"","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"=begin\r\n# Employee info\r\nclass Employee\r\n    attr_accessor :id, :importance, :subordinates\r\n    def initialize( id, importance, subordinates)\r\n        # It's the unique id of each node.\r\n        # unique id of this employee\r\n        @id = id\r\n        # the importance value of this employee\r\n        @importance = importance\r\n        # the id of direct subordinates\r\n        @subordinates = subordinates\r\n    end\r\nend\r\n=end\r\n# @param {Employee} employees\r\n# @param {Integer} id\r\n# @return {Integer}\r\ndef get_importance(employees, id)\r\n    \r\nend","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"/*\r\n// Employee info\r\nclass Employee {\r\n    public $id;\r\n    public $importance;\r\n    public $subordinates;\r\n\r\n    @param Integer $id \r\n    @param Integer $importance \r\n    @param Integer[] $subordinates \r\n    function __construct($id, $importance, $subordinates) {\r\n        // unique id of this employee\r\n        $this->id = $id;\r\n        // the importance value of this employee\r\n        $this->importance = $importance;\r\n        // the id of direct subordinates\r\n        $this->subordinates = $subordinates;\r\n    }\r\n}\r\n*/\r\nclass Solution {\r\n\r\n    /**\r\n     * @param list<Employee> $employees\r\n     * @param Integer $id\r\n     * @return Integer\r\n     */\r\n    function getImportance($employees, $id) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"3.7K\", \"totalSubmission\": \"7.1K\", \"totalAcceptedRaw\": 3651, \"totalSubmissionRaw\": 7112, \"acRate\": \"51.3%\"}","hints":[],"solution":null,"status":null,"sampleTestCase":"[[1,2,[2]], [2,3,[]]]\n2","metaData":"{\r\n  \"name\": \"getImportance\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"employees\",\r\n      \"type\": \"list<Employee>\"\r\n    },\r\n    {\r\n      \"name\": \"id\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  },\r\n  \"structures\": [\r\n    {\r\n      \"name\": \"Employee\",\r\n      \"comment\": \"Employee info\",\r\n      \"members\": [\r\n        {\r\n          \"name\": \"id\",\r\n          \"type\": \"integer\",\r\n          \"comment\": \"unique id of this employee\"\r\n        },\r\n        {\r\n            \"name\": \"importance\",\r\n            \"type\": \"integer\",\r\n            \"comment\": \"the importance value of this employee\"\r\n        },\r\n        {\r\n          \"name\": \"subordinates\",\r\n          \"type\": \"list<integer>\",\r\n          \"comment\": \"the id of direct subordinates\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"generatedriver\": false,\r\n  \"generatedefinition\": false\r\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}