{"data":{"question":{"questionId":"945","questionFrontendId":"909","boundTopicId":1386,"title":"Snakes and Ladders","titleSlug":"snakes-and-ladders","content":"<p>On an N x N <code>board</code>, the numbers from <code>1</code> to <code>N*N</code> are written&nbsp;<em>boustrophedonically</em>&nbsp;<strong>starting from the bottom&nbsp;left of the board</strong>, and alternating direction each row.&nbsp; For example, for a 6 x 6 board, the numbers are written as follows:</p>\r\n\r\n<pre>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/09/23/snakes.png\" style=\"width: 254px; height: 200px;\" />\r\n</pre>\r\n\r\n<p>You start on square <code>1</code> of the board (which is always in the last row and&nbsp;first column).&nbsp; Each move, starting from square <code>x</code>, consists of the following:</p>\r\n\r\n<ul>\r\n\t<li>You choose a destination square <code>S</code> with number&nbsp;<code>x+1</code>, <code>x+2</code>, <code>x+3</code>, <code>x+4</code>, <code>x+5</code>, or <code>x+6</code>, provided this&nbsp;number is&nbsp;<code>&lt;=&nbsp;N*N</code>.\r\n\r\n\t<ul>\r\n\t\t<li>(This choice simulates the result of a standard 6-sided die roll: ie., there are always <strong>at most 6 destinations, regardless of the size of the board</strong>.)</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>If <code>S</code>&nbsp;has a snake or ladder, you move to the destination of that snake or ladder.&nbsp; Otherwise, you move to <code>S</code>.</li>\r\n</ul>\r\n\r\n<p>A board square on row <code>r</code> and column <code>c</code>&nbsp;has a &quot;snake or ladder&quot; if <code>board[r][c] != -1</code>.&nbsp; The destination of that snake or ladder is <code>board[r][c]</code>.</p>\r\n\r\n<p>Note that you only take a snake or ladder at most once per move: if the destination to a snake or ladder is the start of another&nbsp;snake or ladder, you do <strong>not</strong> continue moving.&nbsp; (For example, if the board is `[[4,-1],[-1,3]]`, and on the first move your destination square is `2`, then you finish your first move at&nbsp;`3`, because you do <strong>not</strong> continue moving to `4`.)</p>\r\n\r\n<p>Return the least number of moves required to reach square <font face=\"monospace\">N*N</font>.&nbsp; If it is not possible, return <code>-1</code>.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,35,-1,-1,13,-1],\r\n[-1,-1,-1,-1,-1,-1],\r\n[-1,15,-1,-1,-1,-1]]\r\n<strong>Output: </strong>4\r\n<strong>Explanation: </strong>\r\nAt the beginning, you start at square 1 [at row 5, column 0].\r\nYou decide to move to square 2, and must take the ladder to square 15.\r\nYou then decide to move to square 17 (row 3, column 5), and must take the snake to square 13.\r\nYou then decide to move to square 14, and must take the ladder to square 35.\r\nYou then decide to move to square 36, ending the game.\r\nIt can be shown that you need at least 4 moves to reach the N*N-th square, so the answer is 4.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>2 &lt;= board.length = board[0].length&nbsp;&lt;= 20</code></li>\r\n\t<li><code>board[i][j]</code>&nbsp;is between <code>1</code> and <code>N*N</code> or is equal to <code>-1</code>.</li>\r\n\t<li>The board&nbsp;square with number <code>1</code> has no snake or ladder.</li>\r\n\t<li>The board square with number <code>N*N</code> has no snake or ladder.</li>\r\n</ol>\r\n","translatedTitle":"\u86c7\u68af\u68cb","translatedContent":"<p>\u5728\u4e00\u5757 N x N \u7684\u68cb\u76d8&nbsp;<code>board</code>&nbsp;\u4e0a\uff0c<strong>\u4ece\u68cb\u76d8\u7684\u5de6\u4e0b\u89d2\u5f00\u59cb</strong>\uff0c\u6bcf\u4e00\u884c\u4ea4\u66ff\u65b9\u5411\uff0c\u6309\u4ece&nbsp;<code>1</code> \u5230 <code>N*N</code>&nbsp;\u7684\u6570\u5b57\u7ed9\u65b9\u683c\u7f16\u53f7\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u5757 6 x 6 \u5927\u5c0f\u7684\u68cb\u76d8\uff0c\u53ef\u4ee5\u7f16\u53f7\u5982\u4e0b\uff1a</p>\n\n<pre><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/01/31/snakes.png\" style=\"height: 200px; width: 254px;\">\n</pre>\n\n<p>\u73a9\u5bb6\u4ece\u68cb\u76d8\u4e0a\u7684\u65b9\u683c&nbsp;<code>1</code> \uff08\u603b\u662f\u5728\u6700\u540e\u4e00\u884c\u3001\u7b2c\u4e00\u5217\uff09\u5f00\u59cb\u51fa\u53d1\u3002</p>\n\n<p>\u6bcf\u4e00\u6b21\u4ece\u65b9\u683c&nbsp;<code>x</code>&nbsp;\u8d77\u59cb\u7684\u79fb\u52a8\u90fd\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a</p>\n\n<ul>\n\t<li>\u4f60\u9009\u62e9\u4e00\u4e2a\u76ee\u6807\u65b9\u5757 <code>S</code>\uff0c\u5b83\u7684\u7f16\u53f7\u662f <code>x+1</code>\uff0c<code>x+2</code>\uff0c<code>x+3</code>\uff0c<code>x+4</code>\uff0c<code>x+5</code>\uff0c\u6216\u8005 <code>x+6</code>\uff0c\u53ea\u8981\u8fd9\u4e2a\u6570\u5b57&nbsp;<code>&lt;= N*N</code>\u3002</li>\n\t<li>\u5982\u679c <code>S</code> \u6709\u4e00\u4e2a\u86c7\u6216\u68af\u5b50\uff0c\u4f60\u5c31\u79fb\u52a8\u5230\u90a3\u4e2a\u86c7\u6216\u68af\u5b50\u7684\u76ee\u7684\u5730\u3002\u5426\u5219\uff0c\u4f60\u4f1a\u79fb\u52a8\u5230 <code>S</code>\u3002&nbsp;</li>\n</ul>\n\n<p>\u5728 <code>r</code> \u884c <code>c</code> \u5217\u4e0a\u7684\u65b9\u683c\u91cc\u6709 &ldquo;\u86c7&rdquo; \u6216 &ldquo;\u68af\u5b50&rdquo;\uff1b\u5982\u679c <code>board[r][c] != -1</code>\uff0c\u90a3\u4e2a\u86c7\u6216\u68af\u5b50\u7684\u76ee\u7684\u5730\u5c06\u4f1a\u662f <code>board[r][c]</code>\u3002</p>\n\n<p>\u6ce8\u610f\uff0c\u4f60\u6bcf\u6b21\u79fb\u52a8\u6700\u591a\u53ea\u80fd\u722c\u8fc7\u86c7\u6216\u68af\u5b50\u4e00\u6b21\uff1a\u5c31\u7b97\u76ee\u7684\u5730\u662f\u53e6\u4e00\u6761\u86c7\u6216\u68af\u5b50\u7684\u8d77\u70b9\uff0c\u4f60\u4e5f\u4e0d\u4f1a\u7ee7\u7eed\u79fb\u52a8\u3002</p>\n\n<p>\u8fd4\u56de\u8fbe\u5230\u65b9\u683c N*N \u6240\u9700\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\uff0c\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u5219\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,35,-1,-1,13,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,15,-1,-1,-1,-1]]\n<strong>\u8f93\u51fa\uff1a</strong>4\n<strong>\u89e3\u91ca\uff1a</strong>\n\u9996\u5148\uff0c\u4ece\u65b9\u683c 1 [\u7b2c 5 \u884c\uff0c\u7b2c 0 \u5217] \u5f00\u59cb\u3002\n\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 2\uff0c\u5e76\u5fc5\u987b\u722c\u8fc7\u68af\u5b50\u79fb\u52a8\u5230\u5230\u65b9\u683c 15\u3002\n\u7136\u540e\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 17 [\u7b2c 3 \u884c\uff0c\u7b2c 5 \u5217]\uff0c\u5fc5\u987b\u722c\u8fc7\u86c7\u5230\u65b9\u683c 13\u3002\n\u7136\u540e\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 14\uff0c\u4e14\u5fc5\u987b\u901a\u8fc7\u68af\u5b50\u79fb\u52a8\u5230\u65b9\u683c 35\u3002\n\u7136\u540e\u4f60\u51b3\u5b9a\u79fb\u52a8\u5230\u65b9\u683c 36, \u6e38\u620f\u7ed3\u675f\u3002\n\u53ef\u4ee5\u8bc1\u660e\u4f60\u9700\u8981\u81f3\u5c11 4 \u6b21\u79fb\u52a8\u624d\u80fd\u5230\u8fbe\u7b2c N*N \u4e2a\u65b9\u683c\uff0c\u6240\u4ee5\u7b54\u6848\u662f 4\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= board.length = board[0].length&nbsp;&lt;= 20</code></li>\n\t<li><code>board[i][j]</code>&nbsp;\u4ecb\u4e8e&nbsp;<code>1</code>&nbsp;\u548c&nbsp;<code>N*N</code>&nbsp;\u4e4b\u95f4\u6216\u8005\u7b49\u4e8e&nbsp;<code>-1</code>\u3002</li>\n\t<li>\u7f16\u53f7\u4e3a&nbsp;<code>1</code>&nbsp;\u7684\u65b9\u683c\u4e0a\u6ca1\u6709\u86c7\u6216\u68af\u5b50\u3002</li>\n\t<li>\u7f16\u53f7\u4e3a&nbsp;<code>N*N</code>&nbsp;\u7684\u65b9\u683c\u4e0a\u6ca1\u6709\u86c7\u6216\u68af\u5b50\u3002</li>\n</ol>\n","isPaidOnly":false,"difficulty":"Medium","likes":5,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": true, \"python\": true, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Breadth-first Search","slug":"breadth-first-search","translatedName":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\r\npublic:\r\n    int snakesAndLadders(vector<vector<int>>& board) {\r\n        \r\n    }\r\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class Solution {\r\n    public int snakesAndLadders(int[][] board) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\r\n    def snakesAndLadders(self, board):\r\n        \"\"\"\r\n        :type board: List[List[int]]\r\n        :rtype: int\r\n        \"\"\"\r\n        ","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class Solution:\r\n    def snakesAndLadders(self, board: List[List[int]]) -> int:\r\n        ","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\nint snakesAndLadders(int** board, int boardSize, int* boardColSize){\n\n}\n\n","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\r\n    public int SnakesAndLadders(int[][] board) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\r\n * @param {number[][]} board\r\n * @return {number}\r\n */\r\nvar snakesAndLadders = function(board) {\r\n    \r\n};","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {Integer[][]} board\r\n# @return {Integer}\r\ndef snakes_and_ladders(board)\r\n    \r\nend","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\r\n    func snakesAndLadders(_ board: [[Int]]) -> Int {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"func snakesAndLadders(board [][]int) int {\r\n    \r\n}","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\r\n    def snakesAndLadders(board: Array[Array[Int]]): Int = {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\r\n    fun snakesAndLadders(board: Array<IntArray>): Int {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\r\n    pub fn snakes_and_ladders(board: Vec<Vec<i32>>) -> i32 {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class Solution {\r\n\r\n    /**\r\n     * @param Integer[][] $board\r\n     * @return Integer\r\n     */\r\n    function snakesAndLadders($board) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"328\", \"totalSubmission\": \"1.4K\", \"totalAcceptedRaw\": 328, \"totalSubmissionRaw\": 1416, \"acRate\": \"23.2%\"}","hints":[],"solution":null,"status":null,"sampleTestCase":"[[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]","metaData":"{\r\n  \"name\": \"snakesAndLadders\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"board\",\r\n      \"type\": \"integer[][]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}