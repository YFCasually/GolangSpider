{"data":{"solutionArticle":{"title":"\u4e24\u6570\u4e4b\u548c","slug":"liang-shu-zhi-he-by-leetcode-2","reactedType":null,"status":"PUBLISHED","identifier":"liang-shu-zhi-he-by-leetcode-2","canEdit":false,"reactions":[{"count":13,"reactionType":"AWESOME","__typename":"ArticleReactionCountNode"},{"count":3,"reactionType":"GOOD","__typename":"ArticleReactionCountNode"},{"count":1,"reactionType":"CONFUSED","__typename":"ArticleReactionCountNode"}],"tags":[{"name":"Hash Table","nameTranslated":"\u54c8\u5e0c\u8868","slug":"hash-table","__typename":"ArticleTagNode"},{"name":"Java","nameTranslated":"","slug":"java","__typename":"ArticleTagNode"}],"createdAt":"2018-05-27T16:26:11.200614+00:00","thumbnail":"","author":{"username":"LeetCode","profile":{"userAvatar":"https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode/avatar_1558372906.png","userSlug":"leetcode","realName":"\u529b\u6263\uff08LeetCode\uff09","__typename":"UserProfileNode"},"__typename":"PublicProfileNode"},"summary":"\u00a7 \u65b9\u6cd5\u4e00\uff1a\u66b4\u529b\u6cd5\n\u66b4\u529b\u6cd5\u5f88\u7b80\u5355\uff0c\u904d\u5386\u6bcf\u4e2a\u5143\u7d20 x\uff0c\u5e76\u67e5\u627e\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u503c\u4e0e target - x \u76f8\u7b49\u7684\u76ee\u6807\u5143\u7d20\u3002\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff0c\n\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u8bd5\u56fe\u901a\u8fc7\u904d\u5386\u6570\u7ec4\u7684\u5176\u4f59\u90e8\u5206\u6765\u5bfb\u627e\u5b83\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\uff0c\u8fd9\u5c06\u8017\u8d39 O(n) \u7684\u65f6\u95f4\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\u3002\n\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002","topic":{"id":3517,"commentCount":45,"viewCount":16836,"__typename":"TopicNode"},"byLeetcode":true,"isMyFavorite":false,"isMostPopular":false,"isEditorsPick":false,"upvoteCount":52,"upvoted":false,"hitCount":324231,"__typename":"SolutionArticleNode","content":"#### \u65b9\u6cd5\u4e00\uff1a\u66b4\u529b\u6cd5\n\n\u66b4\u529b\u6cd5\u5f88\u7b80\u5355\uff0c\u904d\u5386\u6bcf\u4e2a\u5143\u7d20 $x$\uff0c\u5e76\u67e5\u627e\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u503c\u4e0e $target - x$ \u76f8\u7b49\u7684\u76ee\u6807\u5143\u7d20\u3002\n\n```java [rkfa5BFX-Java]\npublic int[] twoSum(int[] nums, int target) {\n    for (int i = 0; i < nums.length; i++) {\n        for (int j = i + 1; j < nums.length; j++) {\n            if (nums[j] == target - nums[i]) {\n                return new int[] { i, j };\n            }\n        }\n    }\n    throw new IllegalArgumentException(\"No two sum solution\");\n}\n```\n\n**\u590d\u6742\u5ea6\u5206\u6790\uff1a**\n\n* \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2)$\uff0c\n\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u8bd5\u56fe\u901a\u8fc7\u904d\u5386\u6570\u7ec4\u7684\u5176\u4f59\u90e8\u5206\u6765\u5bfb\u627e\u5b83\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\uff0c\u8fd9\u5c06\u8017\u8d39 $O(n)$ \u7684\u65f6\u95f4\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n* \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(1)$\u3002\n\n\n---\n\n#### \u65b9\u6cd5\u4e8c\uff1a\u4e24\u904d\u54c8\u5e0c\u8868\n\n\u4e3a\u4e86\u5bf9\u8fd0\u884c\u65f6\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u6765\u68c0\u67e5\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u76ee\u6807\u5143\u7d20\u3002\u5982\u679c\u5b58\u5728\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5b83\u7684\u7d22\u5f15\u3002\u4fdd\u6301\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0e\u5176\u7d22\u5f15\u76f8\u4e92\u5bf9\u5e94\u7684\u6700\u597d\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u54c8\u5e0c\u8868\u3002\n\n\u901a\u8fc7\u4ee5\u7a7a\u95f4\u6362\u53d6\u901f\u5ea6\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u67e5\u627e\u65f6\u95f4\u4ece $O(n)$ \u964d\u4f4e\u5230 $O(1)$\u3002\u54c8\u5e0c\u8868\u6b63\u662f\u4e3a\u6b64\u76ee\u7684\u800c\u6784\u5efa\u7684\uff0c\u5b83\u652f\u6301\u4ee5 *\u8fd1\u4f3c* \u6052\u5b9a\u7684\u65f6\u95f4\u8fdb\u884c\u5feb\u901f\u67e5\u627e\u3002\u6211\u7528\u201c\u8fd1\u4f3c\u201d\u6765\u63cf\u8ff0\uff0c\u662f\u56e0\u4e3a\u4e00\u65e6\u51fa\u73b0\u51b2\u7a81\uff0c\u67e5\u627e\u7528\u65f6\u53ef\u80fd\u4f1a\u9000\u5316\u5230 $O(n)$\u3002\u4f46\u53ea\u8981\u4f60\u4ed4\u7ec6\u5730\u6311\u9009\u54c8\u5e0c\u51fd\u6570\uff0c\u5728\u54c8\u5e0c\u8868\u4e2d\u8fdb\u884c\u67e5\u627e\u7684\u7528\u65f6\u5e94\u5f53\u88ab\u644a\u9500\u4e3a $O(1)$\u3002\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\u4f7f\u7528\u4e86\u4e24\u6b21\u8fed\u4ee3\u3002\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u548c\u5b83\u7684\u7d22\u5f15\u6dfb\u52a0\u5230\u8868\u4e2d\u3002\u7136\u540e\uff0c\u5728\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u6bcf\u4e2a\u5143\u7d20\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\uff08$target - nums[i]$\uff09\u662f\u5426\u5b58\u5728\u4e8e\u8868\u4e2d\u3002\u6ce8\u610f\uff0c\u8be5\u76ee\u6807\u5143\u7d20\u4e0d\u80fd\u662f $nums[i]$ \u672c\u8eab\uff01\n\n```java [ravCf32e-Java]\npublic int[] twoSum(int[] nums, int target) {\n    Map<Integer, Integer> map = new HashMap<>();\n    for (int i = 0; i < nums.length; i++) {\n        map.put(nums[i], i);\n    }\n    for (int i = 0; i < nums.length; i++) {\n        int complement = target - nums[i];\n        if (map.containsKey(complement) && map.get(complement) != i) {\n            return new int[] { i, map.get(complement) };\n        }\n    }\n    throw new IllegalArgumentException(\"No two sum solution\");\n}\n```\n\n\n**\u590d\u6742\u5ea6\u5206\u6790\uff1a**\n\n* \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\uff0c\n\u6211\u4eec\u628a\u5305\u542b\u6709 $n$ \u4e2a\u5143\u7d20\u7684\u5217\u8868\u904d\u5386\u4e24\u6b21\u3002\u7531\u4e8e\u54c8\u5e0c\u8868\u5c06\u67e5\u627e\u65f6\u95f4\u7f29\u77ed\u5230 $O(1)$ \uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n* \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\uff0c\n\u6240\u9700\u7684\u989d\u5916\u7a7a\u95f4\u53d6\u51b3\u4e8e\u54c8\u5e0c\u8868\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\uff0c\u8be5\u8868\u4e2d\u5b58\u50a8\u4e86 $n$ \u4e2a\u5143\u7d20\u3002\n\n\n\n\n\n---\n\n#### \u65b9\u6cd5\u4e09\uff1a\u4e00\u904d\u54c8\u5e0c\u8868\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u5b8c\u6210\u3002\u5728\u8fdb\u884c\u8fed\u4ee3\u5e76\u5c06\u5143\u7d20\u63d2\u5165\u5230\u8868\u4e2d\u7684\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u4f1a\u56de\u8fc7\u5934\u6765\u68c0\u67e5\u8868\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u5f53\u524d\u5143\u7d20\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\u3002\u5982\u679c\u5b83\u5b58\u5728\uff0c\u90a3\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u5bf9\u5e94\u89e3\uff0c\u5e76\u7acb\u5373\u5c06\u5176\u8fd4\u56de\u3002\n\n```java [pPe2dJEs-Java]\npublic int[] twoSum(int[] nums, int target) {\n    Map<Integer, Integer> map = new HashMap<>();\n    for (int i = 0; i < nums.length; i++) {\n        int complement = target - nums[i];\n        if (map.containsKey(complement)) {\n            return new int[] { map.get(complement), i };\n        }\n        map.put(nums[i], i);\n    }\n    throw new IllegalArgumentException(\"No two sum solution\");\n}\n```\n\n\n**\u590d\u6742\u5ea6\u5206\u6790\uff1a**\n\n* \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\uff0c\n\u6211\u4eec\u53ea\u904d\u5386\u4e86\u5305\u542b\u6709 $n$ \u4e2a\u5143\u7d20\u7684\u5217\u8868\u4e00\u6b21\u3002\u5728\u8868\u4e2d\u8fdb\u884c\u7684\u6bcf\u6b21\u67e5\u627e\u53ea\u82b1\u8d39 $O(1)$ \u7684\u65f6\u95f4\u3002\n\n* \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\uff0c\n\u6240\u9700\u7684\u989d\u5916\u7a7a\u95f4\u53d6\u51b3\u4e8e\u54c8\u5e0c\u8868\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\uff0c\u8be5\u8868\u6700\u591a\u9700\u8981\u5b58\u50a8 $n$ \u4e2a\u5143\u7d20\u3002"}}}