{"data":{"solutionArticle":{"title":"\u4e24\u6570\u4e4b\u548c C / C++","slug":"liang-shu-zhi-he-by-gpe3dbjds1","reactedType":null,"status":"PUBLISHED","identifier":"liang-shu-zhi-he-by-gpe3dbjds1","canEdit":false,"reactions":[{"count":6,"reactionType":"AWESOME","__typename":"ArticleReactionCountNode"},{"count":9,"reactionType":"GOOD","__typename":"ArticleReactionCountNode"},{"count":1,"reactionType":"CONFUSED","__typename":"ArticleReactionCountNode"}],"tags":[{"name":"C++","nameTranslated":"","slug":"cpp","__typename":"ArticleTagNode"}],"createdAt":"2019-05-10T02:52:50.149152+00:00","thumbnail":"","author":{"username":"gpe3DBjDS1","profile":{"userAvatar":"https://assets.leetcode-cn.com/aliyun-lc-upload/users/gpe3DBjDS1/avatar_1553130615.png","userSlug":"gpe3DBjDS1","realName":"\u9648\u4e50\u4e50","__typename":"UserProfileNode"},"__typename":"PublicProfileNode"},"summary":"\u9898\u76ee\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u4f60\u4e0d\u80fd\u91cd\u590d\u5229\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u540c\u6837\u7684\u5143\u7d20\u3002\n\u793a\u4f8b:\n\u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9\n\u56e0\u4e3a nums[0] + ","topic":{"id":4361,"commentCount":24,"viewCount":7052,"__typename":"TopicNode"},"byLeetcode":false,"isMyFavorite":false,"isMostPopular":false,"isEditorsPick":true,"upvoteCount":32,"upvoted":false,"hitCount":9652,"__typename":"SolutionArticleNode","content":"\u9898\u76ee\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002\n\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u4f60\u4e0d\u80fd\u91cd\u590d\u5229\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u540c\u6837\u7684\u5143\u7d20\u3002\n\n\u793a\u4f8b:\n\u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9\n\u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9\n\u6240\u4ee5\u8fd4\u56de [0, 1]\n\n\n##  \u9898\u76ee\u89e3\u7b54\uff1a\n###  \u66b4\u529b\u6cd5\uff1a\n\n```C++ []\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        int i,j;\n        for(i=0;i<nums.size()-1;i++)\n        {\n            for(j=i+1;j<nums.size();j++)\n            {\n                if(nums[i]+nums[j]==target)\n                {\n                   return {i,j};\n                }\n            }\n        }\n        return {i,j};\n    };\n};\n```\n\u6ce8\uff1a\n1. `nums.size()` \u83b7\u53d6\u5411\u91cf\u5143\u7d20\u4e2a\u6570\uff1b\n\n```C []\nint* twoSum(int* nums, int numsSize, int target) {\n    int i,j;\n    int *result=NULL;\n    for(i=0;i<numsSize-1;i++)\n    {\n        for(j=i+1;j<numsSize;j++)\n        {\n            if(nums[i]+nums[j]==target)\n            {\n                 result=(int*)malloc(sizeof(int)*2);\n                 result[0]=i;\n                 result[1]=j;\n                 return result;\n            }\n        }\n    }\n    return result;\n}\n```\n\u6ce8\uff1a\n1.malloc\u662fc\u8bed\u8a00\u4e2d\u7684\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0cresult=(int*)malloc(sizeof(int)*2);malloc\u51fd\u6570\u8fd4\u56de\u7684\u662fvoid\\*\u578b,\u6240\u4ee5\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6210int\uff0c\u5728\u524d\u9762\u52a0\u4e0a(int *),\u624d\u80fd\u7ed9\u6574\u578b\u8d4b\u503c\uff0c\u540e\u9762(sizeof(int)*2)\u7684\u610f\u601d\u662f\u5206\u914d\u4e24\u4e2aint\u5927\u5c0f\u7684\u7a7a\u95f4\uff1b\n\n**\u603b\u7ed3\uff1a\u8be5\u65b9\u6cd5\u7b80\u5355\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2^),\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(1);\u8fd0\u884c\u901f\u5ea6\u6162\u4e14\u5185\u5b58\u7a7a\u95f4\u6d88\u8017\u5927**\n\n##  \u4e24\u904d\u54c8\u5e0c\u8868\uff1a\n\n```C++ []\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        map<int,int> a;//\u5efa\u7acbhash\u8868\u5b58\u653e\u6570\u7ec4\u5143\u7d20\n        vector<int> b(2,-1);//\u5b58\u653e\u7ed3\u679c\n        for(int i=0;i<nums.size();i++)\n            a.insert(map<int,int>::value_type(nums[i],i));\n        for(int i=0;i<nums.size();i++)\n        {\n            if(a.count(target-nums[i])>0&&(a[target-nums[i]]!=i))\n            //\u5224\u65ad\u662f\u5426\u627e\u5230\u76ee\u6807\u5143\u7d20\u4e14\u76ee\u6807\u5143\u7d20\u4e0d\u80fd\u662f\u672c\u8eab\n            {\n                b[0]=i;\n                b[1]=a[target-nums[i]];\n                break;\n            }\n        }\n        return b;\n    };\n};\n```\n\u6ce8\uff1a\n\n1.\u8be5\u65b9\u6cd5\u7528map\u5b9e\u73b0\uff0cmap\u662fSTL\u7684\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u5b83\u63d0\u4f9b\u4e00\u5bf9\u4e00\uff08\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u79f0\u4e3a\u5173\u952e\u5b57\uff0c\u6bcf\u4e2a\u5173\u952e\u5b57\u53ea\u80fd\u5728map\u4e2d\u51fa\u73b0\u4e00\u6b21\uff0c\u7b2c\u4e8c\u4e2a\u53ef\u80fd\u79f0\u4e3a\u8be5\u5173\u952e\u5b57\u7684\u503c\uff09\u7684\u6570\u636e\u5904\u7406\u80fd\u529b\n\n\n##  \u4e00\u7f16\u54c8\u5e0c\u8868\n\u6539\u8fdb\uff1a\u5728\u8fdb\u884c\u8fed\u4ee3\u5e76\u5c06\u5143\u7d20\u63d2\u5165\u5230\u8868\u4e2d\u7684\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u4f1a\u56de\u8fc7\u5934\u6765\u68c0\u67e5\u8868\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u5f53\u524d\u5143\u7d20\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\u3002\u5982\u679c\u5b83\u5b58\u5728\uff0c\u90a3\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u5bf9\u5e94\u89e3\uff0c\u5e76\u7acb\u5373\u5c06\u5176\u8fd4\u56de\u3002\n\n```C++ []\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        map<int,int> a;//\u63d0\u4f9b\u4e00\u5bf9\u4e00\u7684hash\n        vector<int> b(2,-1);//\u7528\u6765\u627f\u8f7d\u7ed3\u679c\uff0c\u521d\u59cb\u5316\u4e00\u4e2a\u5927\u5c0f\u4e3a2\uff0c\u503c\u4e3a-1\u7684\u5bb9\u5668b\n        for(int i=0;i<nums.size();i++)\n        {\n            if(a.count(target-nums[i])>0)\n            {\n                b[0]=a[target-nums[i]];\n                b[1]=i;\n                break;\n            }\n            a[nums[i]]=i;//\u53cd\u8fc7\u6765\u653e\u5165map\u4e2d\uff0c\u7528\u6765\u83b7\u53d6\u7ed3\u679c\u4e0b\u6807\n        }\n        return b;\n    };\n};\n```\n**\u89c9\u5f97\u672c\u6587\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u70b9\u4e2a\u8d5e\u5662\u8c22\u8c22**\n\n\n"}}}