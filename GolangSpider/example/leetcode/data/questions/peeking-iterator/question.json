{"data":{"question":{"questionId":"284","questionFrontendId":"284","boundTopicId":1880,"title":"Peeking Iterator","titleSlug":"peeking-iterator","content":"<p>Given an Iterator class interface with methods: <code>next()</code> and <code>hasNext()</code>, design and implement a PeekingIterator that support the <code>peek()</code> operation -- it essentially peek() at the element that will be returned by the next call to next().</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nAssume that the iterator is initialized to the beginning of the list: <strong><code>[1,2,3]</code></strong>.\r\n\r\nCall <strong><code>next()</code></strong> gets you <strong>1</strong>, the first element in the list.\r\nNow you call <strong><code>peek()</code></strong> and it returns <strong>2</strong>, the next element. Calling <strong><code>next()</code></strong> after that <i><b>still</b></i> return <strong>2</strong>. \r\nYou call <strong><code>next()</code></strong> the final time and it returns <strong>3</strong>, the last element. \r\nCalling <strong><code>hasNext()</code></strong> after that should return <strong>false</strong>.\r\n</pre>\r\n\r\n<p><b>Follow up</b>: How would you extend your design to be generic and work with all types, not just integer?</p>\r\n","translatedTitle":"\u9876\u7aef\u8fed\u4ee3\u5668","translatedContent":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8fed\u4ee3\u5668\u7c7b\u7684\u63a5\u53e3\uff0c\u63a5\u53e3\u5305\u542b\u4e24\u4e2a\u65b9\u6cd5\uff1a&nbsp;<code>next()</code>&nbsp;\u548c&nbsp;<code>hasNext()</code>\u3002\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301&nbsp;<code>peek()</code>&nbsp;\u64cd\u4f5c\u7684\u9876\u7aef\u8fed\u4ee3\u5668 -- \u5176\u672c\u8d28\u5c31\u662f\u628a\u539f\u672c\u5e94\u7531&nbsp;<code>next()</code>&nbsp;\u65b9\u6cd5\u8fd4\u56de\u7684\u5143\u7d20&nbsp;<code>peek()</code>&nbsp;\u51fa\u6765\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>\u5047\u8bbe\u8fed\u4ee3\u5668\u88ab\u521d\u59cb\u5316\u4e3a\u5217\u8868&nbsp;<strong><code>[1,2,3]</code></strong>\u3002\n\n\u8c03\u7528&nbsp;<strong><code>next() </code></strong>\u8fd4\u56de <strong>1</strong>\uff0c\u5f97\u5230\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n\u73b0\u5728\u8c03\u7528&nbsp;<strong><code>peek()</code></strong>&nbsp;\u8fd4\u56de <strong>2</strong>\uff0c\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u5728\u6b64\u4e4b\u540e\u8c03\u7528&nbsp;<strong><code>next() </code></strong>\u4ecd\u7136\u8fd4\u56de <strong>2</strong>\u3002\n\u6700\u540e\u4e00\u6b21\u8c03\u7528&nbsp;<strong><code>next()</code></strong>&nbsp;\u8fd4\u56de <strong>3</strong>\uff0c\u672b\u5c3e\u5143\u7d20\u3002\u5728\u6b64\u4e4b\u540e\u8c03\u7528&nbsp;<strong><code>hasNext()</code></strong>&nbsp;\u5e94\u8be5\u8fd4\u56de <strong>false</strong>\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong>\u4f60\u5c06\u5982\u4f55\u62d3\u5c55\u4f60\u7684\u8bbe\u8ba1\uff1f\u4f7f\u4e4b\u53d8\u5f97\u901a\u7528\u5316\uff0c\u4ece\u800c\u9002\u5e94\u6240\u6709\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u53ea\u662f\u6574\u6570\u578b\uff1f</p>\n","isPaidOnly":false,"difficulty":"Medium","likes":13,"dislikes":0,"isLiked":null,"similarQuestions":"[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": \"\\u4e8c\\u53c9\\u641c\\u7d22\\u6811\\u8fed\\u4ee3\\u5668\"}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": \"\\u5c55\\u5f00\\u4e8c\\u7ef4\\u5411\\u91cf\"}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": \"\\u952f\\u9f7f\\u8fed\\u4ee3\\u5668\"}]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": true, \"python\": true, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Design","slug":"design","translatedName":"\u8bbe\u8ba1","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"// Below is the interface for Iterator, which is already defined for you.\r\n// **DO NOT** modify the interface for Iterator.\r\nclass Iterator {\r\n    struct Data;\r\n\tData* data;\r\npublic:\r\n\tIterator(const vector<int>& nums);\r\n\tIterator(const Iterator& iter);\r\n\tvirtual ~Iterator();\r\n\t// Returns the next element in the iteration.\r\n\tint next();\r\n\t// Returns true if the iteration has more elements.\r\n\tbool hasNext() const;\r\n};\r\n\r\n\r\nclass PeekingIterator : public Iterator {\r\npublic:\r\n\tPeekingIterator(const vector<int>& nums) : Iterator(nums) {\r\n\t    // Initialize any member here.\r\n\t    // **DO NOT** save a copy of nums and manipulate it directly.\r\n\t    // You should only use the Iterator interface methods.\r\n\t    \r\n\t}\r\n\r\n    // Returns the next element in the iteration without advancing the iterator.\r\n\tint peek() {\r\n        \r\n\t}\r\n\r\n\t// hasNext() and next() should behave the same as in the Iterator interface.\r\n\t// Override them if needed.\r\n\tint next() {\r\n\t    \r\n\t}\r\n\r\n\tbool hasNext() const {\r\n\t    \r\n\t}\r\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"// Java Iterator interface reference:\r\n// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\r\nclass PeekingIterator implements Iterator<Integer> {\r\n\r\n\tpublic PeekingIterator(Iterator<Integer> iterator) {\r\n\t    // initialize any member here.\r\n\t    \r\n\t}\r\n\r\n    // Returns the next element in the iteration without advancing the iterator.\r\n\tpublic Integer peek() {\r\n        \r\n\t}\r\n\r\n\t// hasNext() and next() should behave the same as in the Iterator interface.\r\n\t// Override them if needed.\r\n\t@Override\r\n\tpublic Integer next() {\r\n\t    \r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean hasNext() {\r\n\t    \r\n\t}\r\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"# Below is the interface for Iterator, which is already defined for you.\r\n#\r\n# class Iterator(object):\r\n#     def __init__(self, nums):\r\n#         \"\"\"\r\n#         Initializes an iterator object to the beginning of a list.\r\n#         :type nums: List[int]\r\n#         \"\"\"\r\n#\r\n#     def hasNext(self):\r\n#         \"\"\"\r\n#         Returns true if the iteration has more elements.\r\n#         :rtype: bool\r\n#         \"\"\"\r\n#\r\n#     def next(self):\r\n#         \"\"\"\r\n#         Returns the next element in the iteration.\r\n#         :rtype: int\r\n#         \"\"\"\r\n\r\nclass PeekingIterator(object):\r\n    def __init__(self, iterator):\r\n        \"\"\"\r\n        Initialize your data structure here.\r\n        :type iterator: Iterator\r\n        \"\"\"\r\n        \r\n\r\n    def peek(self):\r\n        \"\"\"\r\n        Returns the next element in the iteration without advancing the iterator.\r\n        :rtype: int\r\n        \"\"\"\r\n        \r\n\r\n    def next(self):\r\n        \"\"\"\r\n        :rtype: int\r\n        \"\"\"\r\n        \r\n\r\n    def hasNext(self):\r\n        \"\"\"\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n# Your PeekingIterator object will be instantiated and called as such:\r\n# iter = PeekingIterator(Iterator(nums))\r\n# while iter.hasNext():\r\n#     val = iter.peek()   # Get the next element but not advance the iterator.\r\n#     iter.next()         # Should return the same value as [val].","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"# Below is the interface for Iterator, which is already defined for you.\r\n#\r\n# class Iterator:\r\n#     def __init__(self, nums):\r\n#         \"\"\"\r\n#         Initializes an iterator object to the beginning of a list.\r\n#         :type nums: List[int]\r\n#         \"\"\"\r\n#\r\n#     def hasNext(self):\r\n#         \"\"\"\r\n#         Returns true if the iteration has more elements.\r\n#         :rtype: bool\r\n#         \"\"\"\r\n#\r\n#     def next(self):\r\n#         \"\"\"\r\n#         Returns the next element in the iteration.\r\n#         :rtype: int\r\n#         \"\"\"\r\n\r\nclass PeekingIterator:\r\n    def __init__(self, iterator):\r\n        \"\"\"\r\n        Initialize your data structure here.\r\n        :type iterator: Iterator\r\n        \"\"\"\r\n        \r\n\r\n    def peek(self):\r\n        \"\"\"\r\n        Returns the next element in the iteration without advancing the iterator.\r\n        :rtype: int\r\n        \"\"\"\r\n        \r\n\r\n    def next(self):\r\n        \"\"\"\r\n        :rtype: int\r\n        \"\"\"\r\n        \r\n\r\n    def hasNext(self):\r\n        \"\"\"\r\n        :rtype: bool\r\n        \"\"\"\r\n        \r\n\r\n# Your PeekingIterator object will be instantiated and called as such:\r\n# iter = PeekingIterator(Iterator(nums))\r\n# while iter.hasNext():\r\n#     val = iter.peek()   # Get the next element but not advance the iterator.\r\n#     iter.next()         # Should return the same value as [val].","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"1.1K\", \"totalSubmission\": \"1.6K\", \"totalAcceptedRaw\": 1090, \"totalSubmissionRaw\": 1619, \"acRate\": \"67.3%\"}","hints":["Think of \"looking ahead\". You want to cache the next element.","Is one variable sufficient? Why or why not?","Test your design with call order of <code>peek()</code> before <code>next()</code> vs <code>next()</code> before <code>peek()</code>.","For a clean implementation, check out <a href=\"https://github.com/google/guava/blob/703ef758b8621cfbab16814f01ddcc5324bdea33/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java#L1125\" target=\"_blank\">Google's guava library source code</a>."],"solution":null,"status":null,"sampleTestCase":"[\"PeekingIterator\",\"next\",\"peek\",\"next\",\"next\",\"hasNext\"]\n[[[1,2,3]],[],[],[],[],[]]","metaData":"{\n  \"name\": \"PeekingIterator\",\n  \"generatedefinition\": false,\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"list<integer>\"\n    },\n    {\n      \"name\": \"commands\",\n      \"type\": \"list<integer>\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"list<string>\",\n    \"dealloc\": true\n  },\n  \"generatedriver\": false\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"]}","__typename":"QuestionNode"}}}