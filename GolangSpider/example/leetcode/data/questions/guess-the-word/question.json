{"data":{"question":{"questionId":"873","questionFrontendId":"843","boundTopicId":1662,"title":"Guess the Word","titleSlug":"guess-the-word","content":"<p>This problem is an&nbsp;<strong><em>interactive problem</em></strong>&nbsp;new to the LeetCode platform.</p>\r\n\r\n<p>We are given a word list of unique words, each word is 6 letters long, and one word in this list is chosen as <strong>secret</strong>.</p>\r\n\r\n<p>You may call <code>master.guess(word)</code>&nbsp;to guess a word.&nbsp; The guessed word should have&nbsp;type <code>string</code>&nbsp;and must be from the original list&nbsp;with 6 lowercase letters.</p>\r\n\r\n<p>This function returns an&nbsp;<code>integer</code>&nbsp;type, representing&nbsp;the number of exact matches (value and position) of your guess to the <strong>secret word</strong>.&nbsp; Also, if your guess is not in the given wordlist, it will return <code>-1</code> instead.</p>\r\n\r\n<p>For each test case, you have 10 guesses to guess the word. At the end of any number of calls, if you have made 10 or less calls to <code>master.guess</code>&nbsp;and at least one of these guesses was the <strong>secret</strong>, you pass the testcase.</p>\r\n\r\n<p>Besides the example test case below, there will be 5&nbsp;additional test cases, each with 100 words in the word list.&nbsp; The letters of each word in those testcases were chosen&nbsp;independently at random from <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>, such that every word in the given word lists is unique.</p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong>&nbsp;secret = &quot;acckzz&quot;, wordlist = [&quot;acckzz&quot;,&quot;ccbazz&quot;,&quot;eiowzz&quot;,&quot;abcczz&quot;]\r\n\r\n<strong>Explanation:</strong>\r\n\r\n<code>master.guess(&quot;aaaaaa&quot;)</code> returns -1, because&nbsp;<code>&quot;aaaaaa&quot;</code>&nbsp;is not in wordlist.\r\n<code>master.guess(&quot;acckzz&quot;) </code>returns 6, because&nbsp;<code>&quot;acckzz&quot;</code> is secret and has all 6&nbsp;matches.\r\n<code>master.guess(&quot;ccbazz&quot;)</code> returns 3, because<code>&nbsp;&quot;ccbazz&quot;</code>&nbsp;has 3 matches.\r\n<code>master.guess(&quot;eiowzz&quot;)</code> returns 2, because&nbsp;<code>&quot;eiowzz&quot;</code>&nbsp;has 2&nbsp;matches.\r\n<code>master.guess(&quot;abcczz&quot;)</code> returns 4, because&nbsp;<code>&quot;abcczz&quot;</code> has 4 matches.\r\n\r\nWe made 5 calls to&nbsp;master.guess and one of them was the secret, so we pass the test case.\r\n</pre>\r\n\r\n<p><strong>Note:</strong>&nbsp; Any solutions that attempt to circumvent the judge&nbsp;will result in disqualification.</p>\r\n","translatedTitle":"\u731c\u731c\u8fd9\u4e2a\u5355\u8bcd","translatedContent":"<p>\u8fd9\u4e2a\u95ee\u9898\u662f LeetCode \u5e73\u53f0\u65b0\u589e\u7684<strong><em>\u4ea4\u4e92\u5f0f\u95ee\u9898 </em></strong>\u3002</p>\n\n<p>\u6211\u4eec\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7531\u4e00\u4e9b\u72ec\u7279\u7684\u5355\u8bcd\u7ec4\u6210\u7684\u5355\u8bcd\u5217\u8868\uff0c\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f 6 \u4e2a\u5b57\u6bcd\u957f\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5355\u8bcd\u5c06\u88ab\u9009\u4f5c<strong>\u79d8\u5bc6</strong>\u3002</p>\n\n<p>\u4f60\u53ef\u4ee5\u8c03\u7528 <code>master.guess(word)</code> \u6765\u731c\u5355\u8bcd\u3002\u4f60\u6240\u731c\u7684\u5355\u8bcd\u5e94\u5f53\u662f\u5b58\u5728\u4e8e\u539f\u5217\u8868\u5e76\u4e14\u7531 6 \u4e2a\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u7c7b\u578b<code>\u5b57\u7b26\u4e32</code>\u3002</p>\n\n<p>\u6b64\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a<code>\u6574\u578b\u6570\u5b57</code>\uff0c\u8868\u793a\u4f60\u7684\u731c\u6d4b\u4e0e<strong>\u79d8\u5bc6\u5355\u8bcd</strong>\u7684\u51c6\u786e\u5339\u914d\uff08\u503c\u548c\u4f4d\u7f6e\u540c\u65f6\u5339\u914d\uff09\u7684\u6570\u76ee\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f60\u7684\u731c\u6d4b\u4e0d\u5728\u7ed9\u5b9a\u7684\u5355\u8bcd\u5217\u8868\u4e2d\uff0c\u5b83\u5c06\u8fd4\u56de <code>-1</code>\u3002</p>\n\n<p>\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f60\u6709 10 \u6b21\u673a\u4f1a\u6765\u731c\u51fa\u8fd9\u4e2a\u5355\u8bcd\u3002\u5f53\u6240\u6709\u8c03\u7528\u90fd\u7ed3\u675f\u65f6\uff0c\u5982\u679c\u60a8\u5bf9 <code>master.guess</code> \u7684\u8c03\u7528\u4e0d\u8d85\u8fc7 10 \u6b21\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u6b21\u731c\u5230<strong>\u79d8\u5bc6</strong>\uff0c\u90a3\u4e48\u60a8\u5c06\u901a\u8fc7\u8be5\u6d4b\u8bd5\u7528\u4f8b\u3002</p>\n\n<p>\u9664\u4e86\u4e0b\u9762\u793a\u4f8b\u7ed9\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u5916\uff0c\u8fd8\u4f1a\u6709 5 \u4e2a\u989d\u5916\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6bcf\u4e2a\u5355\u8bcd\u5217\u8868\u4e2d\u5c06\u4f1a\u6709 100 \u4e2a\u5355\u8bcd\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u7684\u5b57\u6bcd\u90fd\u662f\u4ece <code>&#39;a&#39;</code> \u5230 <code>&#39;z&#39;</code>&nbsp;\u4e2d\u968f\u673a\u9009\u53d6\u7684\uff0c\u5e76\u4e14\u4fdd\u8bc1\u7ed9\u5b9a\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u552f\u4e00\u7684\u3002</p>\n\n<pre><strong>\u793a\u4f8b 1:</strong>\n<strong>\u8f93\u5165:</strong>&nbsp;secret = &quot;acckzz&quot;, wordlist = [&quot;acckzz&quot;,&quot;ccbazz&quot;,&quot;eiowzz&quot;,&quot;abcczz&quot;]\n\n<strong>\u89e3\u91ca:</strong>\n\n<code>master.guess(&quot;aaaaaa&quot;)</code> \u8fd4\u56de -1, \u56e0\u4e3a&nbsp;<code>&quot;aaaaaa&quot;</code>&nbsp;\u4e0d\u5728 wordlist \u4e2d.\n<code>master.guess(&quot;acckzz&quot;) \u8fd4\u56de</code> 6, \u56e0\u4e3a&nbsp;<code>&quot;acckzz&quot;</code> \u5c31\u662f<strong>\u79d8\u5bc6</strong>\uff0c6\u4e2a\u5b57\u6bcd\u5b8c\u5168\u5339\u914d\u3002\n<code>master.guess(&quot;ccbazz&quot;)</code> \u8fd4\u56de 3, \u56e0\u4e3a<code>&nbsp;&quot;ccbazz&quot;</code>&nbsp;\u6709 3 \u4e2a\u5339\u914d\u9879\u3002\n<code>master.guess(&quot;eiowzz&quot;)</code> \u8fd4\u56de 2, \u56e0\u4e3a&nbsp;<code>&quot;eiowzz&quot;</code>&nbsp;\u6709 2 \u4e2a\u5339\u914d\u9879\u3002\n<code>master.guess(&quot;abcczz&quot;)</code> \u8fd4\u56de 4, \u56e0\u4e3a&nbsp;<code>&quot;abcczz&quot;</code> \u6709 4 \u4e2a\u5339\u914d\u9879\u3002\n\n\u6211\u4eec\u8c03\u7528\u4e86 5 \u6b21master.guess\uff0c\u5176\u4e2d\u4e00\u6b21\u731c\u5230\u4e86<strong>\u79d8\u5bc6</strong>\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u4e86\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong>\u4efb\u4f55\u8bd5\u56fe\u7ed5\u8fc7\u8bc4\u5224\u7684\u89e3\u51b3\u65b9\u6848\u90fd\u5c06\u5bfc\u81f4\u6bd4\u8d5b\u8d44\u683c\u88ab\u53d6\u6d88\u3002</p>\n","isPaidOnly":false,"difficulty":"Hard","likes":4,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": true, \"python\": true, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Minimax","slug":"minimax","translatedName":"\u6781\u5c0f\u5316\u6781\u5927","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * class Master {\r\n *   public:\r\n *     int guess(string word);\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    void findSecretWord(vector<string>& wordlist, Master& master) {\r\n        \r\n    }\r\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * interface Master {\r\n *     public int guess(String word) {}\r\n * }\r\n */\r\nclass Solution {\r\n    public void findSecretWord(String[] wordlist, Master master) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"# \"\"\"\r\n# This is Master's API interface.\r\n# You should not implement it, or speculate about its implementation\r\n# \"\"\"\r\n#class Master(object):\r\n#    def guess(self, word):\r\n#        \"\"\"\r\n#        :type word: str\r\n#        :rtype int\r\n#        \"\"\"\r\n\r\nclass Solution(object):\r\n    def findSecretWord(self, wordlist, master):\r\n        \"\"\"\r\n        :type wordlist: List[Str]\r\n        :type master: Master\r\n        :rtype: None\r\n        \"\"\"\r\n        ","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"# \"\"\"\r\n# This is Master's API interface.\r\n# You should not implement it, or speculate about its implementation\r\n# \"\"\"\r\n#class Master:\r\n#    def guess(self, word):\r\n#        \"\"\"\r\n#        :type word: str\r\n#        :rtype int\r\n#        \"\"\"\r\n\r\nclass Solution:\r\n    def findSecretWord(self, wordlist, master):\r\n        \"\"\"\r\n        :type wordlist: List[Str]\r\n        :type master: Master\r\n        :rtype: None\r\n        \"\"\"\r\n        ","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"/**\r\n * *********************************************************************\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * *********************************************************************\r\n *\r\n * int guess(Master *, char *word);\r\n */\r\nvoid findSecretWord(char** wordlist, int wordlistSize, Master* master) {\r\n    \r\n}","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * class Master {\r\n *     public int Guess(string word);\r\n * }\r\n */\r\nclass Solution {\r\n    public void FindSecretWord(string[] wordlist, Master master) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\r\n * // This is the master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * function Master() {\r\n *\r\n *     @param {string[]} wordlist\r\n *     @param {Master} master\r\n *     @return {integer}\r\n *     this.guess = function(word) {\r\n *         ...\r\n *     };\r\n * };\r\n */\r\n/**\r\n * @param {string[]} wordlist\r\n * @param {Master} master\r\n * @return {void}\r\n */\r\nvar findSecretWord = function(wordlist, master) {\r\n    \r\n};","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"#    This is Master's API interface.\r\n#    You should not implement it, or speculate about its implementation\r\n#\r\n# class Master\r\n# =begin\r\n#     :type word: String\r\n#     :rtype: Integer\r\n# =end\r\n#     def guess(word)\r\n#         ...\r\n#     end\r\n# end\r\n#\r\n\r\n# @param {String[]} wordlist\r\n# @param {Master} master\r\n# @return {Void}\r\ndef find_secret_word(wordlist, master)\r\n    \r\nend","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * class Master {\r\n *     public func guess(word: String) -> Int {}\r\n * }\r\n */\r\nclass Solution {\r\n    func findSecretWord(_ wordlist: [String], _ master: Master) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * type Master struct {\r\n * }\r\n *\r\n * func (this *Master) Guess(word string) int {}\r\n */\r\nfunc findSecretWord(wordlist []string, master *Master) {\r\n    \r\n}","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * class Master {\r\n *\r\n *   def guess(word: String): Int = {}\r\n *\r\n * }\r\n */\r\nobject Solution {\r\n    def findSecretWord(wordlist: Array[String], master: Master): Unit = {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"/**\r\n * // This is the Master's API interface.\r\n * // You should not implement it, or speculate about its implementation\r\n * interface Master {\r\n *     fun guess(word: String): Int {}\r\n * }\r\n */\r\nclass Solution {\r\n    fun findSecretWord(wordlist: Array<String>, master: Master) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"291\", \"totalSubmission\": \"1.1K\", \"totalAcceptedRaw\": 291, \"totalSubmissionRaw\": 1094, \"acRate\": \"26.6%\"}","hints":[],"solution":null,"status":null,"sampleTestCase":"\"acckzz\"\n[\"acckzz\",\"ccbazz\",\"eiowzz\",\"abcczz\"]\n10","metaData":"{\n  \"name\": \"findSecretWord\",\n  \"params\": [\n    {\n      \"name\": \"secret\",\n      \"type\": \"string\"\n    },\n    {\n      \"name\": \"wordlist\",\n      \"type\": \"string[]\"\n    },\n    {\n      \"name\": \"numguesses\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n      \"type\": \"void\"\n  },\n  \"generatedriver\": false,\n  \"generatedefinition\": false\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"]}","__typename":"QuestionNode"}}}