{"data":{"question":{"questionId":"146","questionFrontendId":"146","boundTopicId":1074,"title":"LRU Cache","titleSlug":"lru-cache","content":"<p>Design and implement a data structure for <a href=\"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\" target=\"_blank\">Least Recently Used (LRU) cache</a>. It should support the following operations: <code>get</code> and <code>put</code>.</p>\r\n\r\n<p><code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br />\r\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.</p>\r\n\r\n<p>The cache is initialized with a <strong>positive</strong> capacity.</p>\r\n\r\n<p><b>Follow up:</b><br />\r\nCould you do both operations in <b>O(1)</b> time complexity?</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\nLRUCache cache = new LRUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.put(4, 4);    // evicts key 1\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4\r\n</pre>\r\n\r\n<p>&nbsp;</p>","translatedTitle":"LRU\u7f13\u5b58\u673a\u5236","translatedContent":"<p>\u8fd0\u7528\u4f60\u6240\u638c\u63e1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8bbe\u8ba1\u548c\u5b9e\u73b0\u4e00\u4e2a&nbsp; <a href=\"https://baike.baidu.com/item/LRU\" target=\"_blank\">LRU (\u6700\u8fd1\u6700\u5c11\u4f7f\u7528) \u7f13\u5b58\u673a\u5236</a>\u3002\u5b83\u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u83b7\u53d6\u6570\u636e <code>get</code> \u548c \u5199\u5165\u6570\u636e <code>put</code> \u3002</p>\n\n<p>\u83b7\u53d6\u6570\u636e <code>get(key)</code> - \u5982\u679c\u5bc6\u94a5 (key) \u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u83b7\u53d6\u5bc6\u94a5\u7684\u503c\uff08\u603b\u662f\u6b63\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56de -1\u3002<br>\n\u5199\u5165\u6570\u636e <code>put(key, value)</code> - \u5982\u679c\u5bc6\u94a5\u4e0d\u5b58\u5728\uff0c\u5219\u5199\u5165\u5176\u6570\u636e\u503c\u3002\u5f53\u7f13\u5b58\u5bb9\u91cf\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u5b83\u5e94\u8be5\u5728\u5199\u5165\u65b0\u6570\u636e\u4e4b\u524d\u5220\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u503c\uff0c\u4ece\u800c\u4e3a\u65b0\u7684\u6570\u636e\u503c\u7559\u51fa\u7a7a\u95f4\u3002</p>\n\n<p><strong>\u8fdb\u9636:</strong></p>\n\n<p>\u4f60\u662f\u5426\u53ef\u4ee5\u5728&nbsp;<strong>O(1)</strong> \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u8fd9\u4e24\u79cd\u64cd\u4f5c\uff1f</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>LRUCache cache = new LRUCache( 2 /* \u7f13\u5b58\u5bb9\u91cf */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // \u8fd4\u56de  1\ncache.put(3, 3);    // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5bc6\u94a5 2 \u4f5c\u5e9f\ncache.get(2);       // \u8fd4\u56de -1 (\u672a\u627e\u5230)\ncache.put(4, 4);    // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5bc6\u94a5 1 \u4f5c\u5e9f\ncache.get(1);       // \u8fd4\u56de -1 (\u672a\u627e\u5230)\ncache.get(3);       // \u8fd4\u56de  3\ncache.get(4);       // \u8fd4\u56de  4\n</pre>\n","isPaidOnly":false,"difficulty":"Hard","likes":146,"dislikes":0,"isLiked":null,"similarQuestions":"[{\"title\": \"LFU Cache\", \"titleSlug\": \"lfu-cache\", \"difficulty\": \"Hard\", \"translatedTitle\": \"LFU\\u7f13\\u5b58\"}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": \"\\u8bbe\\u8ba1\\u5185\\u5b58\\u6587\\u4ef6\\u7cfb\\u7edf\"}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": \"\\u8fed\\u4ee3\\u538b\\u7f29\\u5b57\\u7b26\\u4e32\"}]","contributors":[],"langToValidPlayground":"{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Design","slug":"design","translatedName":"\u8bbe\u8ba1","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class LRUCache {\r\npublic:\r\n    LRUCache(int capacity) {\r\n        \r\n    }\r\n    \r\n    int get(int key) {\r\n        \r\n    }\r\n    \r\n    void put(int key, int value) {\r\n        \r\n    }\r\n};\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * LRUCache* obj = new LRUCache(capacity);\r\n * int param_1 = obj->get(key);\r\n * obj->put(key,value);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class LRUCache {\r\n\r\n    public LRUCache(int capacity) {\r\n        \r\n    }\r\n    \r\n    public int get(int key) {\r\n        \r\n    }\r\n    \r\n    public void put(int key, int value) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * LRUCache obj = new LRUCache(capacity);\r\n * int param_1 = obj.get(key);\r\n * obj.put(key,value);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class LRUCache(object):\r\n\r\n    def __init__(self, capacity):\r\n        \"\"\"\r\n        :type capacity: int\r\n        \"\"\"\r\n        \r\n\r\n    def get(self, key):\r\n        \"\"\"\r\n        :type key: int\r\n        :rtype: int\r\n        \"\"\"\r\n        \r\n\r\n    def put(self, key, value):\r\n        \"\"\"\r\n        :type key: int\r\n        :type value: int\r\n        :rtype: None\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your LRUCache object will be instantiated and called as such:\r\n# obj = LRUCache(capacity)\r\n# param_1 = obj.get(key)\r\n# obj.put(key,value)","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class LRUCache:\r\n\r\n    def __init__(self, capacity: int):\r\n        \r\n\r\n    def get(self, key: int) -> int:\r\n        \r\n\r\n    def put(self, key: int, value: int) -> None:\r\n        \r\n\r\n\r\n# Your LRUCache object will be instantiated and called as such:\r\n# obj = LRUCache(capacity)\r\n# param_1 = obj.get(key)\r\n# obj.put(key,value)","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"typedef struct {\r\n    \r\n} LRUCache;\r\n\r\n\r\nLRUCache* lRUCacheCreate(int capacity) {\r\n    \r\n}\r\n\r\nint lRUCacheGet(LRUCache* obj, int key) {\r\n  \r\n}\r\n\r\nvoid lRUCachePut(LRUCache* obj, int key, int value) {\r\n  \r\n}\r\n\r\nvoid lRUCacheFree(LRUCache* obj) {\r\n    \r\n}\r\n\r\n/**\r\n * Your LRUCache struct will be instantiated and called as such:\r\n * LRUCache* obj = lRUCacheCreate(capacity);\r\n * int param_1 = lRUCacheGet(obj, key);\r\n \r\n * lRUCachePut(obj, key, value);\r\n \r\n * lRUCacheFree(obj);\r\n*/","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class LRUCache {\r\n\r\n    public LRUCache(int capacity) {\r\n        \r\n    }\r\n    \r\n    public int Get(int key) {\r\n        \r\n    }\r\n    \r\n    public void Put(int key, int value) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * LRUCache obj = new LRUCache(capacity);\r\n * int param_1 = obj.Get(key);\r\n * obj.Put(key,value);\r\n */","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\r\n * @param {number} capacity\r\n */\r\nvar LRUCache = function(capacity) {\r\n    \r\n};\r\n\r\n/** \r\n * @param {number} key\r\n * @return {number}\r\n */\r\nLRUCache.prototype.get = function(key) {\r\n    \r\n};\r\n\r\n/** \r\n * @param {number} key \r\n * @param {number} value\r\n * @return {void}\r\n */\r\nLRUCache.prototype.put = function(key, value) {\r\n    \r\n};\r\n\r\n/** \r\n * Your LRUCache object will be instantiated and called as such:\r\n * var obj = new LRUCache(capacity)\r\n * var param_1 = obj.get(key)\r\n * obj.put(key,value)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"class LRUCache\r\n\r\n=begin\r\n    :type capacity: Integer\r\n=end\r\n    def initialize(capacity)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type key: Integer\r\n    :rtype: Integer\r\n=end\r\n    def get(key)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    :type key: Integer\r\n    :type value: Integer\r\n    :rtype: Void\r\n=end\r\n    def put(key, value)\r\n        \r\n    end\r\n\r\n\r\nend\r\n\r\n# Your LRUCache object will be instantiated and called as such:\r\n# obj = LRUCache.new(capacity)\r\n# param_1 = obj.get(key)\r\n# obj.put(key, value)","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class LRUCache {\r\n\r\n    init(_ capacity: Int) {\r\n        \r\n    }\r\n    \r\n    func get(_ key: Int) -> Int {\r\n        \r\n    }\r\n    \r\n    func put(_ key: Int, _ value: Int) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * let obj = LRUCache(capacity)\r\n * let ret_1: Int = obj.get(key)\r\n * obj.put(key, value)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"type LRUCache struct {\r\n    \r\n}\r\n\r\n\r\nfunc Constructor(capacity int) LRUCache {\r\n    \r\n}\r\n\r\n\r\nfunc (this *LRUCache) Get(key int) int {\r\n    \r\n}\r\n\r\n\r\nfunc (this *LRUCache) Put(key int, value int)  {\r\n    \r\n}\r\n\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * obj := Constructor(capacity);\r\n * param_1 := obj.Get(key);\r\n * obj.Put(key,value);\r\n */","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"class LRUCache(_capacity: Int) {\r\n\r\n    def get(key: Int): Int = {\r\n        \r\n    }\r\n\r\n    def put(key: Int, value: Int) {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * var obj = new LRUCache(capacity)\r\n * var param_1 = obj.get(key)\r\n * obj.put(key,value)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class LRUCache(capacity: Int) {\r\n\r\n    fun get(key: Int): Int {\r\n        \r\n    }\r\n\r\n    fun put(key: Int, value: Int) {\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * var obj = LRUCache(capacity)\r\n * var param_1 = obj.get(key)\r\n * obj.put(key,value)\r\n */","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"struct LRUCache {\r\n\r\n}\r\n\r\n\r\n/** \r\n * `&self` means the method takes an immutable reference.\r\n * If you need a mutable reference, change it to `&mut self` instead.\r\n */\r\nimpl LRUCache {\r\n\r\n    fn new(capacity: i32) -> Self {\r\n        \r\n    }\r\n    \r\n    fn get(&self, key: i32) -> i32 {\r\n        \r\n    }\r\n    \r\n    fn put(&self, key: i32, value: i32) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * let obj = LRUCache::new(capacity);\r\n * let ret_1: i32 = obj.get(key);\r\n * obj.put(key, value);\r\n */","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class LRUCache {\r\n    /**\r\n     * @param Integer $capacity\r\n     */\r\n    function __construct($capacity) {\r\n        \r\n    }\r\n  \r\n    /**\r\n     * @param Integer $key\r\n     * @return Integer\r\n     */\r\n    function get($key) {\r\n        \r\n    }\r\n  \r\n    /**\r\n     * @param Integer $key\r\n     * @param Integer $value\r\n     * @return NULL\r\n     */\r\n    function put($key, $value) {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your LRUCache object will be instantiated and called as such:\r\n * $obj = LRUCache($capacity);\r\n * $ret_1 = $obj->get($key);\r\n * $obj->put($key, $value);\r\n */","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"8.5K\", \"totalSubmission\": \"20.8K\", \"totalAcceptedRaw\": 8499, \"totalSubmissionRaw\": 20812, \"acRate\": \"40.8%\"}","hints":[],"solution":null,"status":null,"sampleTestCase":"[\"LRUCache\",\"put\",\"put\",\"get\",\"put\",\"get\",\"put\",\"get\",\"get\",\"get\"]\n[[2],[1,1],[2,2],[1],[3,3],[2],[4,4],[1],[3],[4]]","metaData":"{\r\n    \"classname\": \"LRUCache\",\r\n    \"maxbytesperline\": 200000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n            {\r\n                \"type\": \"integer\",\r\n                \"name\": \"capacity\"\r\n            }\r\n        ]\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"get\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"key\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"put\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"key\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"value\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}