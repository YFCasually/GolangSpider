{"data":{"question":{"questionId":"1078","questionFrontendId":"1021","boundTopicId":3366,"title":"Remove Outermost Parentheses","titleSlug":"remove-outermost-parentheses","content":"<p>A valid parentheses string is either empty <code>(&quot;&quot;)</code>, <code>&quot;(&quot; + A + &quot;)&quot;</code>, or <code>A + B</code>, where <code>A</code> and <code>B</code> are valid parentheses strings, and <code>+</code> represents string concatenation.&nbsp; For example, <code>&quot;&quot;</code>, <code>&quot;()&quot;</code>, <code>&quot;(())()&quot;</code>, and <code>&quot;(()(()))&quot;</code> are all valid parentheses strings.</p>\r\n\r\n<p>A valid parentheses string <code>S</code> is <strong>primitive</strong> if it is nonempty, and there does not exist a way to split it into <code>S = A+B</code>, with <code>A</code> and <code>B</code> nonempty valid parentheses strings.</p>\r\n\r\n<p>Given a valid parentheses string <code>S</code>, consider its primitive decomposition: <code>S = P_1 + P_2 + ... + P_k</code>, where <code>P_i</code> are primitive valid parentheses strings.</p>\r\n\r\n<p>Return <code>S</code> after removing the outermost parentheses of every primitive string in the primitive decomposition of <code>S</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;(()())(())&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">&quot;()()()&quot;</span>\r\n<strong>Explanation: </strong>\r\nThe input string is &quot;(()())(())&quot;, with primitive decomposition &quot;(()())&quot; + &quot;(())&quot;.\r\nAfter removing outer parentheses of each part, this is &quot;()()&quot; + &quot;()&quot; = &quot;()()()&quot;.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;(()())(())(()(()))&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">&quot;()()()()(())&quot;</span>\r\n<strong>Explanation: </strong>\r\nThe input string is &quot;(()())(())(()(()))&quot;, with primitive decomposition &quot;(()())&quot; + &quot;(())&quot; + &quot;(()(()))&quot;.\r\nAfter removing outer parentheses of each part, this is &quot;()()&quot; + &quot;()&quot; + &quot;()(())&quot; = &quot;()()()()(())&quot;.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;()()&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">&quot;&quot;</span>\r\n<strong>Explanation: </strong>\r\nThe input string is &quot;()()&quot;, with primitive decomposition &quot;()&quot; + &quot;()&quot;.\r\nAfter removing outer parentheses of each part, this is &quot;&quot; + &quot;&quot; = &quot;&quot;.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>S.length &lt;= 10000</code></li>\r\n\t<li><code>S[i]</code> is <code>&quot;(&quot;</code> or <code>&quot;)&quot;</code></li>\r\n\t<li><code>S</code> is a valid parentheses string</li>\r\n</ol>\r\n\r\n<div>\r\n<div>\r\n<div>&nbsp;</div>\r\n</div>\r\n</div>","translatedTitle":"\u5220\u9664\u6700\u5916\u5c42\u7684\u62ec\u53f7","translatedContent":"<p>\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32\u4e3a\u7a7a&nbsp;<code>(&quot;&quot;)</code>\u3001<code>&quot;(&quot; + A + &quot;)&quot;</code>&nbsp;\u6216&nbsp;<code>A + B</code>\uff0c\u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u90fd\u662f\u6709\u6548\u7684\u62ec\u53f7\u5b57\u7b26\u4e32\uff0c<code>+</code>&nbsp;\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u3002\u4f8b\u5982\uff0c<code>&quot;&quot;</code>\uff0c<code>&quot;()&quot;</code>\uff0c<code>&quot;(())()&quot;</code>&nbsp;\u548c&nbsp;<code>&quot;(()(()))&quot;</code>&nbsp;\u90fd\u662f\u6709\u6548\u7684\u62ec\u53f7\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u5982\u679c\u6709\u6548\u5b57\u7b26\u4e32&nbsp;<code>S</code>&nbsp;\u975e\u7a7a\uff0c\u4e14\u4e0d\u5b58\u5728\u5c06\u5176\u62c6\u5206\u4e3a&nbsp;<code>S = A+B</code>&nbsp;\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u79f0\u5176\u4e3a<strong>\u539f\u8bed\uff08primitive\uff09</strong>\uff0c\u5176\u4e2d&nbsp;<code>A</code> \u548c&nbsp;<code>B</code>&nbsp;\u90fd\u662f\u975e\u7a7a\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32\u3002</p>\n\n<p>\u7ed9\u51fa\u4e00\u4e2a\u975e\u7a7a\u6709\u6548\u5b57\u7b26\u4e32&nbsp;<code>S</code>\uff0c\u8003\u8651\u5c06\u5176\u8fdb\u884c\u539f\u8bed\u5316\u5206\u89e3\uff0c\u4f7f\u5f97\uff1a<code>S = P_1 + P_2 + ... + P_k</code>\uff0c\u5176\u4e2d&nbsp;<code>P_i</code>&nbsp;\u662f\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32\u539f\u8bed\u3002</p>\n\n<p>\u5bf9&nbsp;<code>S</code>&nbsp;\u8fdb\u884c\u539f\u8bed\u5316\u5206\u89e3\uff0c\u5220\u9664\u5206\u89e3\u4e2d\u6bcf\u4e2a\u539f\u8bed\u5b57\u7b26\u4e32\u7684\u6700\u5916\u5c42\u62ec\u53f7\uff0c\u8fd4\u56de <code>S</code>&nbsp;\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;(()())(())&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;()()()&quot;\n<strong>\u89e3\u91ca\uff1a\n</strong>\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a &quot;(()())(())&quot;\uff0c\u539f\u8bed\u5316\u5206\u89e3\u5f97\u5230 &quot;(()())&quot; + &quot;(())&quot;\uff0c\n\u5220\u9664\u6bcf\u4e2a\u90e8\u5206\u4e2d\u7684\u6700\u5916\u5c42\u62ec\u53f7\u540e\u5f97\u5230 &quot;()()&quot; + &quot;()&quot; = &quot;()()()&quot;\u3002</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;(()())(())(()(()))&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;()()()()(())&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a &quot;(()())(())(()(()))&quot;\uff0c\u539f\u8bed\u5316\u5206\u89e3\u5f97\u5230 &quot;(()())&quot; + &quot;(())&quot; + &quot;(()(()))&quot;\uff0c\n\u5220\u9664\u6bcf\u9694\u90e8\u5206\u4e2d\u7684\u6700\u5916\u5c42\u62ec\u53f7\u540e\u5f97\u5230 &quot;()()&quot; + &quot;()&quot; + &quot;()(())&quot; = &quot;()()()()(())&quot;\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>&quot;()()&quot;\n<strong>\u8f93\u51fa\uff1a</strong>&quot;&quot;\n<strong>\u89e3\u91ca\uff1a</strong>\n\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a &quot;()()&quot;\uff0c\u539f\u8bed\u5316\u5206\u89e3\u5f97\u5230 &quot;()&quot; + &quot;()&quot;\uff0c\n\u5220\u9664\u6bcf\u4e2a\u90e8\u5206\u4e2d\u7684\u6700\u5916\u5c42\u62ec\u53f7\u540e\u5f97\u5230 &quot;&quot; + &quot;&quot; = &quot;&quot;\u3002\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 10000</code></li>\n\t<li><code>S[i]</code> \u4e3a&nbsp;<code>&quot;(&quot;</code> \u6216&nbsp;<code>&quot;)&quot;</code></li>\n\t<li><code>S</code> \u662f\u4e00\u4e2a\u6709\u6548\u62ec\u53f7\u5b57\u7b26\u4e32</li>\n</ol>\n","isPaidOnly":false,"difficulty":"Easy","likes":20,"dislikes":0,"isLiked":null,"similarQuestions":"[]","contributors":[],"langToValidPlayground":"{\"cpp\": true, \"java\": true, \"python\": true, \"python3\": true, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}","topicTags":[{"name":"Stack","slug":"stack","translatedName":"\u6808","__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Solution {\r\npublic:\r\n    string removeOuterParentheses(string S) {\r\n        \r\n    }\r\n};","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class Solution {\r\n    public String removeOuterParentheses(String S) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class Solution(object):\r\n    def removeOuterParentheses(self, S):\r\n        \"\"\"\r\n        :type S: str\r\n        :rtype: str\r\n        \"\"\"","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class Solution:\r\n    def removeOuterParentheses(self, S: str) -> str:","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\nchar * removeOuterParentheses(char * S){\n\n}\n\n","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class Solution {\r\n    public string RemoveOuterParentheses(string S) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\r\n * @param {string} S\r\n * @return {string}\r\n */\r\nvar removeOuterParentheses = function(S) {\r\n    \r\n};","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"# @param {String} s\r\n# @return {String}\r\ndef remove_outer_parentheses(s)\r\n    \r\nend","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"class Solution {\r\n    func removeOuterParentheses(_ S: String) -> String {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"func removeOuterParentheses(S string) string {\r\n    \r\n}","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"object Solution {\r\n    def removeOuterParentheses(S: String): String = {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Solution {\r\n    fun removeOuterParentheses(S: String): String {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"impl Solution {\r\n    pub fn remove_outer_parentheses(s: String) -> String {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class Solution {\r\n\r\n    /**\r\n     * @param String $S\r\n     * @return String\r\n     */\r\n    function removeOuterParentheses($S) {\r\n        \r\n    }\r\n}","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"3.8K\", \"totalSubmission\": \"5K\", \"totalAcceptedRaw\": 3768, \"totalSubmissionRaw\": 5001, \"acRate\": \"75.3%\"}","hints":["Can you find the primitive decomposition?  The number of ( and ) characters must be equal."],"solution":null,"status":null,"sampleTestCase":"\"(()())(())\"","metaData":"{\r\n  \"name\": \"removeOuterParentheses\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"S\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"string\"\r\n  }\r\n}\r\n","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"envInfo":"{\"cpp\": [\"C++\", \"<p>\\u7248\\u672c\\uff1a<code>g++ 6.3</code> \\u91c7\\u7528\\u6700\\u65b0C++ 14\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002<a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> \\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\"], \"java\": [\"Java\", \"<p>\\u7248\\u672c\\uff1a<code>Java 1.8.0</code>\\u3002\\u53ef\\u4ee5\\u4f7f\\u7528Java 8\\u7684\\u7279\\u6027\\u4f8b\\u5982\\uff0clambda expressions \\u548c stream API\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u88ab\\u5bfc\\u5165\\u3002</p>\"], \"python\": [\"Python\", \"<p>\\u7248\\u672c\\uff1a <code>Python 2.7.12</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982\\uff1a<a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002\\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u6ce8\\u610f Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">\\u5c06\\u57282020\\u5e74\\u540e\\u4e0d\\u518d\\u7ef4\\u62a4</a>\\u3002 \\u5982\\u60f3\\u4f7f\\u7528\\u6700\\u65b0\\u7248\\u7684Python\\uff0c\\u8bf7\\u9009\\u62e9Python 3\\u3002</p>\"], \"c\": [\"C\", \"<p>\\u7248\\u672c\\uff1a<code>GCC 6.3</code>\\uff0c\\u91c7\\u7528GNU99\\u6807\\u51c6\\u3002</p>\\r\\n\\r\\n<p>\\u7f16\\u8bd1\\u65f6\\uff0c\\u5c06\\u4f1a\\u91c7\\u7528<code>-O1</code>\\u7ea7\\u4f18\\u5316\\u3002 <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a>\\u4e5f\\u88ab\\u5f00\\u542f\\u6765\\u68c0\\u6d4b<code>out-of-bounds</code>\\u548c<code>use-after-free</code>\\u9519\\u8bef\\u3002</p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u4f7f\\u7528\\u65b9\\u4fbf\\uff0c\\u5927\\u90e8\\u5206\\u6807\\u51c6\\u5e93\\u7684\\u5934\\u6587\\u4ef6\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8\\u5bfc\\u5165\\u3002</p>\\r\\n\\r\\n<p>\\u5982\\u60f3\\u4f7f\\u7528\\u54c8\\u5e0c\\u8868\\u8fd0\\u7b97, \\u60a8\\u53ef\\u4ee5\\u4f7f\\u7528 <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>\\u3002 \\\"uthash.h\\\"\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5bfc\\u5165\\u3002\\u8bf7\\u770b\\u5982\\u4e0b\\u793a\\u4f8b:</p>\\r\\n\\r\\n<p><b>1. \\u5f80\\u54c8\\u5e0c\\u8868\\u4e2d\\u6dfb\\u52a0\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. \\u5728\\u54c8\\u5e0c\\u8868\\u4e2d\\u67e5\\u627e\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. \\u4ece\\u54c8\\u5e0c\\u8868\\u4e2d\\u5220\\u9664\\u4e00\\u4e2a\\u5bf9\\u8c61\\uff1a</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><code>Mono 5.12.0</code>\\u63d0\\u4f9b\\u4e86<a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">\\u5bf9C# 7\\u7684\\u5168\\u9762\\u652f\\u6301</a>\\u3002</p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u7f16\\u8bd1\\u65f6\\u9ed8\\u8ba4\\u5f00\\u542f\\u4e86debug\\u6807\\u8bb0(<code>/debug</code>)\\u3002</p>\"], \"javascript\": [\"JavaScript\", \"<p>\\u7248\\u672c\\uff1a<code>Nodejs 10.15.0</code></p>\\r\\n\\r\\n<p>\\u60a8\\u7684\\u4ee3\\u7801\\u5728\\u6267\\u884c\\u65f6\\u5c06\\u5e26\\u4e0a <code>--harmony</code> \\u6807\\u8bb0\\u6765\\u5f00\\u542f <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">\\u65b0\\u7248ES6\\u7279\\u6027</a>\\u3002</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> \\u5e93\\u5df2\\u7ecf\\u9ed8\\u8ba4\\u88ab\\u5305\\u542b\\u3002</p>\"], \"ruby\": [\"Ruby\", \"<p>\\u4f7f\\u7528<code>Ruby 2.4.1</code>\\u6267\\u884c</p>\"], \"swift\": [\"Swift\", \"<p>\\u7248\\u672c\\uff1a<code>Swift 4.2</code></p>\\r\\n\\r\\n<p>\\u6211\\u4eec\\u901a\\u5e38\\u4fdd\\u8bc1\\u66f4\\u65b0\\u5230 <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">Apple\\u653e\\u51fa\\u7684\\u6700\\u65b0\\u7248Swift</a>\\u3002\\u5982\\u679c\\u60a8\\u53d1\\u73b0Swift\\u4e0d\\u662f\\u6700\\u65b0\\u7248\\u7684\\uff0c\\u8bf7\\u8054\\u7cfb\\u6211\\u4eec\\uff01\\u6211\\u4eec\\u5c06\\u5c3d\\u5feb\\u66f4\\u65b0\\u3002</p>\"], \"golang\": [\"Go\", \"<p>\\u7248\\u672c\\uff1a<code>Go 1.10.3</code></p>\"], \"python3\": [\"Python3\", \"<p>\\u7248\\u672c\\uff1a<code>Python 3.6</code></p>\\r\\n\\r\\n<p>\\u4e3a\\u4e86\\u65b9\\u4fbf\\u8d77\\u89c1\\uff0c\\u5927\\u90e8\\u5206\\u5e38\\u7528\\u5e93\\u5df2\\u7ecf\\u88ab\\u81ea\\u52a8 \\u5bfc\\u5165\\uff0c\\u5982<a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u4f7f\\u7528\\u5176\\u4ed6\\u5e93\\u51fd\\u6570\\uff0c\\u8bf7\\u81ea\\u884c\\u5bfc\\u5165\\u3002</p>\"], \"scala\": [\"Scala\", \"<p>\\u7248\\u672c\\uff1a<code>Scala 2.11.6</code></p>\"], \"kotlin\": [\"Kotlin\", \"<p>\\u7248\\u672c\\uff1a<code>Kotlin 1.2.50</code></p>\"], \"rust\": [\"Rust\", \"<p>\\u7248\\u672c\\uff1a<code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>\\u652f\\u6301 crates.io \\u7684 <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a></p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}","__typename":"QuestionNode"}}}